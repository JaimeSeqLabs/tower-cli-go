openapi: 3.0.1
info:
  contact:
    email: info@seqera.io
    url: https://seqera.io
  description: Nextflow Tower service API
  title: Nextflow Tower API
  version: 1.0.0
servers:
- url: /
paths:
  /actions:
    get:
      operationId: ListActions
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: 'Comma-separated list of attributes to retrieve: `labels`. Empty
          to retrieve nothing '
        explode: true
        in: query
        name: attributes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ActionQueryAttribute'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListActionsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: List the available Pipeline Actions for the authenticated user or given
        workspace
    post:
      operationId: CreateAction
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateActionRequest'
        description: Action create request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateActionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Create a new Pipeline Action
  /actions/labels/add:
    post:
      operationId: AddLabelsToActions
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateWorkflowLabelsRequest'
        description: Labels add request
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Add some labels to some actions
  /actions/labels/apply:
    post:
      operationId: ApplyLabelsToActions
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateActionLabelsRequest'
        description: Labels apply request
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Apply some labels to some actions
  /actions/labels/remove:
    post:
      operationId: RemoveLabelsFromActions
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateActionLabelsRequest'
        description: Labels remove request
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Remove some labels from some actions
  /actions/types:
    get:
      operationId: ListActionTypes
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEventTypesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: List the supported event types that can trigger a Pipeline Action
  /actions/validate:
    get:
      operationId: ValidateActionName
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Action name to validate
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Duplicated element
      security:
      - BearerAuth: []
      summary: Check that an action name is valid
  /actions/{actionId}:
    delete:
      operationId: DeleteAction
      parameters:
      - description: Action string identifier
        explode: false
        in: path
        name: actionId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Delete a Pipeline Action
    get:
      operationId: DescribeAction
      parameters:
      - description: Action string identifier
        explode: false
        in: path
        name: actionId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: 'Comma-separated list of attributes to retrieve: `labels`. Empty
          to retrieve nothing '
        explode: true
        in: query
        name: attributes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ActionQueryAttribute'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeActionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Describe an existing Pipeline Action
    put:
      operationId: UpdateAction
      parameters:
      - description: Action string identifier
        explode: false
        in: path
        name: actionId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateActionRequest'
        description: Action update request
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Update a Pipeline Action
  /actions/{actionId}/launch:
    post:
      operationId: LaunchAction
      parameters:
      - description: Action string identifier
        explode: false
        in: path
        name: actionId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaunchActionRequest'
        description: Action launch request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaunchActionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Trigger the execution of a Tower Launch Action
  /actions/{actionId}/pause:
    post:
      operationId: PauseAction
      parameters:
      - description: Action string identifier
        explode: false
        in: path
        name: actionId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmptyBodyRequest'
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Toggle the pause status of an existing Pipeline Action
  /avatars:
    post:
      operationId: CreateAvatar
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          multipart/form-data:
            schema:
              properties:
                image:
                  format: binary
                  type: string
              type: object
        description: Image file request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAvatarResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Create the avatar image
  /avatars/{avatarId}:
    get:
      operationId: DownloadAvatar
      parameters:
      - description: Avatar string identifier
        explode: false
        in: path
        name: avatarId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
        "404":
          description: Not found element
      security:
      - BearerAuth: []
      summary: Download the avatar image
  /compute-envs:
    get:
      operationId: ListComputeEnvs
      parameters:
      - description: Compute environment status
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListComputeEnvsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: List all Tower compute environments for the authenticated user or given
        workspace
    post:
      operationId: CreateComputeEnv
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateComputeEnvRequest'
        description: Compute environment create request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateComputeEnvResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Create a new Tower compute environment
  /compute-envs/validate:
    get:
      operationId: ValidateComputeEnvName
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Compute env name to validate
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Duplicated element
      security:
      - BearerAuth: []
      summary: Check that is a valid compute env name
  /compute-envs/{computeEnvId}:
    delete:
      operationId: DeleteComputeEnv
      parameters:
      - description: Compute environment string identifier
        explode: false
        in: path
        name: computeEnvId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflicting deletion
      security:
      - BearerAuth: []
      summary: Delete an existing Tower compute environment
    get:
      operationId: DescribeComputeEnv
      parameters:
      - description: Compute environment string identifier
        explode: false
        in: path
        name: computeEnvId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: 'Comma-separated list of attributes to retrieve: `labels`. Empty
          to retrieve nothing '
        explode: true
        in: query
        name: attributes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ComputeEnvQueryAttribute'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeComputeEnvResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Describe a Tower compute environment
  /compute-envs/{computeEnvId}/primary:
    post:
      operationId: UpdateComputeEnvPrimary
      parameters:
      - description: Compute environment string identifier
        explode: false
        in: path
        name: computeEnvId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmptyBodyRequest'
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Defines the primary Tower compute environment
  /credentials:
    get:
      operationId: ListCredentials
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Platform string identifier
        explode: true
        in: query
        name: platformId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCredentialsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: List available credentials for the authenticated user or given workspace
    post:
      operationId: CreateCredentials
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCredentialsRequest'
        description: Credentials create request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCredentialsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Create a new credentials record
  /credentials/validate:
    get:
      operationId: ValidateCredentialsName
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Credentials name to validate
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Duplicated element
      security:
      - BearerAuth: []
      summary: Check that is a valid credentials name
  /credentials/{credentialsId}:
    delete:
      operationId: DeleteCredentials
      parameters:
      - description: Credentials string identifier
        explode: false
        in: path
        name: credentialsId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Delete the credentials record for the given id
    get:
      operationId: DescribeCredentials
      parameters:
      - description: Credentials string identifier
        explode: false
        in: path
        name: credentialsId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCredentialsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Describe the credentials for the given id
    put:
      operationId: UpdateCredentials
      parameters:
      - description: Credentials string identifier
        explode: false
        in: path
        name: credentialsId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCredentialsRequest'
        description: Credentials create request
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Update the credentials data for the given id
  /ga4gh/wes/v1/runs:
    get:
      operationId: GaRunList
      parameters:
      - description: Page size
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Page token
        explode: true
        in: query
        name: page_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      summary: GA4GH list runs
    post:
      operationId: GaRunCreate
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RunRequest'
        description: Run request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunId'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      summary: GA4GH create a new run
  /ga4gh/wes/v1/runs/{run_id}:
    get:
      operationId: GaRunDescribe
      parameters:
      - description: Run string identifier
        explode: false
        in: path
        name: run_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunLog'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      summary: GA4GH describe run
  /ga4gh/wes/v1/runs/{run_id}/cancel:
    post:
      operationId: GaRunCancel
      parameters:
      - description: Run string identifier
        explode: false
        in: path
        name: run_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmptyBodyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunId'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      summary: GA4GH cancel a run
  /ga4gh/wes/v1/runs/{run_id}/status:
    get:
      operationId: GaRunStatus
      parameters:
      - description: Run string identifier
        explode: false
        in: path
        name: run_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunStatus'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      summary: GA4GH retrieve run status
  /ga4gh/wes/v1/service-info:
    get:
      operationId: GaServiceInfo
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInfo'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      summary: GA4GH service info
  /labels:
    get:
      operationId: ListLabels
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Pagination result max result
        explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Pagination offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filter search param
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Labels type
        explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/WorkflowQueryAttribute'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkspacesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: List the labels of the authenticated user or a workspace
    post:
      operationId: CreateLabel
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLabelRequest'
        description: Label create request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLabelResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Create a new label
  /labels/{labelId}:
    delete:
      operationId: DeleteLabel
      parameters:
      - description: Label numeric identifier
        explode: false
        in: path
        name: labelId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Delete a label
    put:
      operationId: UpdateLabel
      parameters:
      - description: Label numeric identifier
        explode: false
        in: path
        name: labelId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLabelRequest'
        description: Label update request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLabelResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Update an existing label
  /launch/{launchId}:
    get:
      operationId: DescribeLaunch
      parameters:
      - description: Launch string identifier
        explode: false
        in: path
        name: launchId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeLaunchResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Describe the Launch record for the given id
  /launch/{launchId}/datasets:
    get:
      operationId: ListLaunchDatasetVersions
      parameters:
      - description: Launch string identifier
        explode: false
        in: path
        name: launchId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeLaunchResponse'
          description: OK
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Describe the datasets used in a launch
  /orgs:
    get:
      operationId: ListOrganizations
      parameters:
      - description: Organization user role identifier
        explode: true
        in: query
        name: role
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrganizationsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: List available organizations
    post:
      operationId: CreateOrganization
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationRequest'
        description: Organization create request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrganizationResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Duplicated element
      security:
      - BearerAuth: []
      summary: Create a new organization
  /orgs/validate:
    get:
      operationId: ValidateOrganizationName
      parameters:
      - description: Organization name to validate
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Duplicated element
      security:
      - BearerAuth: []
      summary: Check that is a valid organization name
  /orgs/{orgId}:
    delete:
      operationId: DeleteOrganization
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Delete an organization
    get:
      operationId: DescribeOrganization
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeOrganizationResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Describe organization details
    put:
      operationId: UpdateOrganization
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationRequest'
        description: Organization update request
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Update organization details
  /orgs/{orgId}/collaborators:
    get:
      operationId: ListOrganizationCollaborators
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Pagination result max result
        explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Pagination offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filter search param
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMembersResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: List all collaborators of an organization
  /orgs/{orgId}/members:
    get:
      operationId: ListOrganizationMembers
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Pagination result max result
        explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Pagination offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filter search param
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMembersResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: List all members of an organization
  /orgs/{orgId}/members/add:
    put:
      operationId: CreateOrganizationMember
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMemberRequest'
        description: Member addition request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddMemberResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Duplicated element
      security:
      - BearerAuth: []
      summary: Add a new organization member
  /orgs/{orgId}/members/leave:
    delete:
      operationId: LeaveOrganization
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Leave an organization
  /orgs/{orgId}/members/{memberId}:
    delete:
      operationId: DeleteOrganizationMember
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Organization member numeric identifier
        explode: false
        in: path
        name: memberId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Delete an organization member
  /orgs/{orgId}/members/{memberId}/role:
    put:
      operationId: UpdateOrganizationMemberRole
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Organization member numeric identifier
        explode: false
        in: path
        name: memberId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMemberRoleRequest'
        description: Member role update request
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Update the role of an organization member
  /orgs/{orgId}/teams:
    get:
      operationId: ListOrganizationTeams
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Pagination result max result
        explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Pagination offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTeamResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: List all the teams of a given organization
    post:
      operationId: CreateOrganizationTeam
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeamRequest'
        description: Team create request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTeamResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Duplicated element
      security:
      - BearerAuth: []
      summary: Create a new organization team
  /orgs/{orgId}/teams/validate:
    get:
      operationId: ValidateTeamName
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Organization name to validate
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Check that is a valid team name
  /orgs/{orgId}/teams/{teamId}:
    delete:
      operationId: DeleteOrganizationTeam
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Team numeric identifier
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Delete an organization team
  /orgs/{orgId}/teams/{teamId}/members:
    get:
      operationId: ListOrganizationTeamMembers
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Team numeric identifier
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: search
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMembersResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: List all the members of a team
    post:
      operationId: CreateOrganizationTeamMember
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Team numeric identifier
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeamMemberRequest'
        description: Team create request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTeamMemberResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Add a new team member
  /orgs/{orgId}/teams/{teamId}/members/{memberId}/delete:
    delete:
      operationId: DeleteOrganizationTeamMember
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Team numeric identifier
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Member numeric identifier
        explode: false
        in: path
        name: memberId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Delete a team member
  /orgs/{orgId}/workspaces:
    get:
      operationId: ListWorkspaces
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkspacesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: List the workspaces of a given organization accessible by the authenticated
        user
    post:
      operationId: CreateWorkspace
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceRequest'
        description: Workspace create request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkspaceResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Duplicated element
      security:
      - BearerAuth: []
      summary: Create a new workspace
  /orgs/{orgId}/workspaces/validate:
    get:
      operationId: WorkspaceValidate
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Name to validate
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Duplicated element
      security:
      - BearerAuth: []
      summary: Check that is a valid workspace name
  /orgs/{orgId}/workspaces/{workspaceId}:
    delete:
      operationId: DeleteWorkspace
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Workspace numeric identifier
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Delete a workspace
    get:
      operationId: DescribeWorkspace
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Workspace numeric identifier
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorkspaceResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Describe a workspace
    put:
      operationId: UpdateWorkspace
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Workspace numeric identifier
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkspaceRequest'
        description: Workspace update request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorkspaceResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Update workspace details
  /orgs/{orgId}/workspaces/{workspaceId}/participants:
    delete:
      operationId: LeaveWorkspaceParticipant
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Workspace numeric identifier
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Leave a workspace
    get:
      operationId: ListWorkspaceParticipants
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Workspace numeric identifier
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Pagination result max result
        explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Pagination offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filter search param
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListParticipantsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: List workspace participants
  /orgs/{orgId}/workspaces/{workspaceId}/participants/add:
    put:
      operationId: CreateWorkspaceParticipant
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Workspace numeric identifier
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddParticipantRequest'
        description: Participant addition request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddParticipantResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Duplicated element
      security:
      - BearerAuth: []
      summary: Create a new workspace participant
  /orgs/{orgId}/workspaces/{workspaceId}/participants/{participantId}:
    delete:
      operationId: DeleteWorkspaceParticipant
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Workspace numeric identifier
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Participant numeric identifier
        explode: false
        in: path
        name: participantId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Delete a workspace participant
  /orgs/{orgId}/workspaces/{workspaceId}/participants/{participantId}/role:
    put:
      operationId: UpdateWorkspaceParticipantRole
      parameters:
      - description: Organization numeric identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Workspace numeric identifier
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Participant numeric identifier
        explode: false
        in: path
        name: participantId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateParticipantRoleRequest'
        description: Participant role update request
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Update a participant role
  /pipeline-secrets:
    get:
      operationId: ListPipelineSecrets
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipelineSecretsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: List all pipeline secrets in the workspace
    post:
      operationId: CreatePipelineSecret
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePipelineSecretRequest'
        description: Pipeline secret create request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePipelineSecretResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Create a Pipeline Secrets inside the given workspace
  /pipeline-secrets/validate:
    get:
      operationId: ValidatePipelineSecretName
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Secret name to validate
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Duplicated element
      security:
      - BearerAuth: []
      summary: Check that is a valid pipeline secret name
  /pipeline-secrets/{secretId}:
    delete:
      operationId: DeletePipelineSecret
      parameters:
      - description: Secret numeric identifier
        explode: false
        in: path
        name: secretId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Delete the pipeline secret record for the given id
    get:
      operationId: DescribePipelineSecret
      parameters:
      - description: Secret numeric identifier
        explode: false
        in: path
        name: secretId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePipelineSecretResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Fetch a single pipeline secret
    put:
      operationId: UpdatePipelineSecret
      parameters:
      - description: Secret numeric identifier
        explode: false
        in: path
        name: secretId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePipelineSecretRequest'
        description: Secret update request
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Update the secrets data for the given id
  /pipelines:
    get:
      operationId: ListPipelines
      parameters:
      - description: 'Comma-separated list of attributes to retrieve. Empty to retrieve
          nothing '
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/PipelineQueryAttribute'
          type: array
        style: form
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Pagination result max result
        explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Pagination offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filter search param
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Filter visibility param
        explode: true
        in: query
        name: visibility
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipelinesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: List all the Pipelines of a workspace
    post:
      operationId: CreatePipeline
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePipelineRequest'
        description: Pipeline creation request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePipelineResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Duplicated element
      security:
      - BearerAuth: []
      summary: Create a new Pipeline in a workspace
  /pipelines/info:
    get:
      operationId: DescribePipelineRepository
      parameters:
      - description: Pipeline name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Pipeline revision
        explode: true
        in: query
        name: revision
        required: false
        schema:
          type: string
        style: form
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePipelineInfoResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Describe the Pipeline entity for the given id
  /pipelines/labels/add:
    post:
      operationId: AddLabelsToPipelines
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociatePipelineLabelsRequest'
        description: Labels add request
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Add some labels to some pipelines
  /pipelines/labels/apply:
    post:
      operationId: ApplyLabelsToPipelines
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociatePipelineLabelsRequest'
        description: Labels apply request
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Apply some labels to some pipelines
  /pipelines/labels/remove:
    post:
      operationId: RemoveLabelsFromPipelines
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociatePipelineLabelsRequest'
        description: Labels remove request
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Remove some labels from some pipelines
  /pipelines/repositories:
    get:
      operationId: ListPipelineRepositories
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipelineInfoResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: List Pipelines accessible to the authenticated user
  /pipelines/validate:
    get:
      operationId: ValidatePipelineName
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Organization numeric identifier
        explode: true
        in: query
        name: orgId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Pipeline name to validate
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Duplicated element
      security:
      - BearerAuth: []
      summary: Check that a Pipeline name is valid
  /pipelines/{pipelineId}:
    delete:
      operationId: DeletePipeline
      parameters:
      - description: Pipeline numeric identifier
        explode: false
        in: path
        name: pipelineId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Delete a Pipeline
    get:
      operationId: DescribePipeline
      parameters:
      - description: Pipeline numeric identifier
        explode: false
        in: path
        name: pipelineId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: 'Comma-separated list of attributes to retrieve. Empty to retrieve
          nothing '
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/PipelineQueryAttribute'
          type: array
        style: form
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Source workspace numeric identifier
        explode: true
        in: query
        name: sourceWorkspaceId
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePipelineResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Describe a Pipeline
    put:
      operationId: UpdatePipeline
      parameters:
      - description: Pipeline numeric identifier
        explode: false
        in: path
        name: pipelineId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePipelineRequest'
        description: Pipeline update request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePipelineResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Update a Pipeline
  /pipelines/{pipelineId}/launch:
    get:
      operationId: DescribePipelineLaunch
      parameters:
      - description: Pipeline numeric identifier
        explode: false
        in: path
        name: pipelineId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Source workspace numeric identifier
        explode: true
        in: query
        name: sourceWorkspaceId
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeLaunchResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Describe a Pipeline launch
  /pipelines/{pipelineId}/schema:
    get:
      operationId: DescribePipelineSchema
      parameters:
      - description: Pipeline numeric identifier
        explode: false
        in: path
        name: pipelineId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Source workspace numeric identifier
        explode: true
        in: query
        name: sourceWorkspaceId
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      - description: 'Comma-separated list of attributes to retrieve: `schema` or
          `params`. Empty to retrieve all of them'
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/PipelineSchemaAttributes'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineSchemaResponse'
          description: OK
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Retrieve the Pipeline input schema
  /platforms:
    get:
      operationId: ListPlatforms
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPlatformsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: List available computing platforms
  /platforms/{platformId}:
    get:
      operationId: DescribePlatform
      parameters:
      - description: Platform string identifier
        explode: false
        in: path
        name: platformId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: regionId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: credentialsId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePlatformResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Describe the platform entity for the given id
  /platforms/{platformId}/regions:
    get:
      operationId: ListPlatformRegions
      parameters:
      - description: Platform string identifier
        explode: false
        in: path
        name: platformId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRegionsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: List available regions for the platform specified
  /service-info:
    get:
      operationId: Info
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInfoResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
      summary: General Tower service features and version
  /tokens:
    get:
      operationId: TokenList
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessTokensResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: List all available API tokens
    post:
      operationId: CreateToken
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccessTokenRequest'
        description: Access token create request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccessTokenResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Duplicated element
      security:
      - BearerAuth: []
      summary: Create an API token
  /tokens/delete-all:
    delete:
      operationId: DeleteAllTokens
      parameters: []
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Delete all user API tokens
  /tokens/{tokenId}:
    delete:
      operationId: DeleteToken
      parameters:
      - description: Token numeric identifier
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Delete an API token
  /trace/create:
    post:
      operationId: CreateTrace
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraceCreateRequest'
        description: Trace create request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceCreateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Create a new Workflow execution trace
  /trace/{workflowId}/begin:
    put:
      operationId: UpdateTraceBegin
      parameters:
      - description: Workflow string identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraceBeginRequest'
        description: Trace begin request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceBeginResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Signal the Workflow execution has started
  /trace/{workflowId}/complete:
    put:
      operationId: UpdateTraceComplete
      parameters:
      - description: Workflow string identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraceCompleteRequest'
        description: Trace complete request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceCompleteResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Signal the Workflow execution has completed
  /trace/{workflowId}/heartbeat:
    put:
      operationId: UpdateTraceHeartbeat
      parameters:
      - description: Workflow string identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraceHeartbeatRequest'
        description: Trace heartbeat request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceHeartbeatResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Period request to signal the execution is still on-going
  /trace/{workflowId}/progress:
    put:
      operationId: UpdateTraceProgress
      parameters:
      - description: Workflow string identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraceProgressRequest'
        description: Trace progress request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceProgressResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Store one or more task executions metadata for the specified Workflow
  /user:
    get:
      operationId: profile
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserResponse'
          description: profile 200 response
      security:
      - BearerAuth: []
  /user-info:
    get:
      operationId: UserInfo
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Describe current user
  /user/{userId}/workspaces:
    get:
      operationId: ListWorkspacesUser
      parameters:
      - description: User numeric identifier
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkspacesAndOrgResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: List the workspaces and organizations of a given user
  /users/validate:
    get:
      operationId: ValidateUserName
      parameters:
      - description: User name to validate
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Duplicated element
      security:
      - BearerAuth: []
      summary: Check that the user name is valid
  /users/{userId}:
    delete:
      operationId: DeleteUser
      parameters:
      - description: User numeric identifier
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Delete a user entity
    get:
      operationId: DescribeUser
      parameters:
      - description: User numeric identifier
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeUserResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Describe a user entity
    post:
      operationId: UpdateUser
      parameters:
      - description: User numeric identifier
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User update request
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Update an user entity
  /workflow:
    get:
      operationId: ListWorkflows
      parameters:
      - description: 'Comma-separated list of attributes to retrieve. Empty to retrieve
          nothing '
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/WorkflowQueryAttribute'
          type: array
        style: form
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Pagination result max result
        explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Pagination offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Filter search param
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkflowsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: List Workflow records matching the filter parameters
  /workflow/delete:
    post:
      operationId: DeleteWorkflowMany
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Force the deletion even if any workflows are active
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteWorkflowsRequest'
        description: Delete workflows request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWorkflowsResponse'
          description: OK - Return the ids of the workflows that could not be deleted
            if any
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Delete several workflow entities given their ids
  /workflow/labels/add:
    post:
      operationId: AddLabelsToWorkflows
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateWorkflowLabelsRequest'
        description: Labels add request
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Add some labels to some workflows
  /workflow/labels/apply:
    post:
      operationId: ApplyLabelsToWorkflows
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateWorkflowLabelsRequest'
        description: Labels apply request
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Apply some labels to some workflows
  /workflow/labels/remove:
    post:
      operationId: RemoveLabelsFromWorkflows
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateWorkflowLabelsRequest'
        description: Labels remove request
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Remove some labels from some workflows
  /workflow/launch:
    post:
      operationId: CreateWorkflowLaunch
      parameters:
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Launch with optimized configuration from groundswell service
        explode: true
        in: query
        name: optimized
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: sourceWorkspaceId
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitWorkflowLaunchRequest'
        description: Workflow launch request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitWorkflowLaunchResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Submit a Workflow execution
  /workflow/random-name:
    get:
      operationId: GenerateRandomWorkflowName
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RandomWorkflowNameResponse'
          description: Generated name
      security:
      - BearerAuth: []
      summary: Generates a random name
  /workflow/validate:
    get:
      operationId: ValidateWorkflowConstraints
      parameters:
      - description: Workflow run name to validate
        explode: true
        in: query
        name: runName
        required: false
        schema:
          type: string
        style: form
      - description: Workflow session ID to validate
        explode: true
        in: query
        name: sessionId
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request. Invalid run name format
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Duplicated element. Existing run name and session ID combination
      security:
      - BearerAuth: []
      summary: 'Check that the given run name of a workflow has a valid format. When
        the session ID is given: check that no other workflow in the system exists
        with the combination of both elements'
  /workflow/{workflowId}:
    delete:
      operationId: DeleteWorkflow
      parameters:
      - description: Workflow string identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Force the deletion even if the workflow is active
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "204":
          description: OK - Not content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Delete the Workflow entity with the given ID
    get:
      operationId: DescribeWorkflow
      parameters:
      - description: Workflow string identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: 'Comma-separated list of attributes to retrieve. Empty to retrieve
          nothing '
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            $ref: '#/components/schemas/WorkflowQueryAttribute'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorkflowResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Describe the Workflow entity for the given ID
  /workflow/{workflowId}/cancel:
    post:
      operationId: CancelWorkflow
      parameters:
      - description: Workflow string identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmptyBodyRequest'
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Cancel a Workflow execution
  /workflow/{workflowId}/download:
    get:
      operationId: DownloadWorkflowLog
      parameters:
      - description: Workflow string identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      - description: Filename to download
        explode: true
        in: query
        name: fileName
        required: false
        schema:
          type: string
        style: form
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Download Workflow files of the Nextflow main job
  /workflow/{workflowId}/download/{taskId}:
    get:
      operationId: DownloadWorkflowTaskLog
      parameters:
      - description: Workflow string identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      - description: Task numeric identifier
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Filename to download
        explode: true
        in: query
        name: fileName
        required: false
        schema:
          type: string
        style: form
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Download Workflow files of a given task
  /workflow/{workflowId}/launch:
    get:
      operationId: DescribeWorkflowLaunch
      parameters:
      - description: Workflow string identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeWorkflowLaunchResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Duplicated element. Existing run name and session ID combination
      security:
      - BearerAuth: []
      summary: Describe a Workflow launch
  /workflow/{workflowId}/log:
    get:
      operationId: WorkflowLogs
      parameters:
      - description: Workflow string identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Workflow log cursor
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowLogResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Retrieve Workflow output logs of the Nextflow main job
  /workflow/{workflowId}/log/{taskId}:
    get:
      operationId: GetWorkflowTaskLog
      parameters:
      - description: Workflow string identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      - description: Task numeric identifier
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Workflow log cursor
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowLogResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Retrieve Workflow output logs of a given task
  /workflow/{workflowId}/metrics:
    get:
      operationId: DescribeWorkflowMetrics
      parameters:
      - description: Workflow string identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkflowMetricsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Get the execution metrics for the given Workflow ID
  /workflow/{workflowId}/progress:
    get:
      operationId: DescribeWorkflowProgress
      parameters:
      - description: Workflow string identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProgressResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Retrieve the execution progress for the given Workflow ID
  /workflow/{workflowId}/star:
    delete:
      operationId: DeleteWorkflowStar
      parameters:
      - description: Workflow string identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkflowStarResponse'
          description: OK
        "403":
          description: Operation not allowed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
      summary: Unstar a workflow
    get:
      operationId: DescribeWorkflowStar
      parameters:
      - description: Workflow string identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkflowStarResponse'
          description: OK
        "403":
          description: Operation not allowed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
      summary: Check starred status of a workflow
    post:
      operationId: CreateWorkflowStar
      parameters:
      - description: Workflow string identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkflowStarResponse'
          description: OK
        "403":
          description: Operation not allowed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Duplicated element
      summary: Star a workflow
  /workflow/{workflowId}/task/{taskId}:
    get:
      operationId: DescribeWorkflowTask
      parameters:
      - description: Workflow string identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      - description: Task numeric identifier
        explode: false
        in: path
        name: taskId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTaskResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Describe a task entity with the given ID
  /workflow/{workflowId}/tasks:
    get:
      operationId: ListWorkflowTasks
      parameters:
      - description: Workflow string identifier
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          type: string
        style: simple
      - description: Workspace numeric identifier
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Pagination result max result
        explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Pagination offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field to sort by
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: Sorting direction (asc|desc)
        explode: true
        in: query
        name: sortDir
        required: false
        schema:
          type: string
        style: form
      - description: Search tasks by name
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTasksResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: List the tasks for the given Workflow ID and filter parameters
  /workspaces/{workspaceId}/datasets:
    get:
      operationId: ListDatasets
      parameters:
      - description: Workspace numeric identifier
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: List all datasets in the workspace
    post:
      operationId: CreateDataset
      parameters:
      - description: Workspace numeric identifier
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatasetRequest'
        description: Dataset create request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatasetResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Create a dataset
  /workspaces/{workspaceId}/datasets/versions:
    get:
      operationId: ListWorkspaceDatasetVersions
      parameters:
      - description: Workspace numeric identifier
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: true
        in: query
        name: mimeType
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetVersionsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: List the latest version of each dataset in the workspace
  /workspaces/{workspaceId}/datasets/{datasetId}:
    delete:
      operationId: DeleteDataset
      parameters:
      - description: Workspace numeric identifier
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Dataset string identifier
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Delete a dataset
    put:
      operationId: UpdateDataset
      parameters:
      - description: Workspace numeric identifier
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Dataset string identifier
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDatasetRequest'
        description: Dataset update request
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Update a dataset
  /workspaces/{workspaceId}/datasets/{datasetId}/metadata:
    get:
      operationId: DescribeDataset
      parameters:
      - description: Workspace numeric identifier
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Dataset string identifier
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDatasetResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Describe a dataset
  /workspaces/{workspaceId}/datasets/{datasetId}/upload:
    post:
      operationId: UploadDataset
      parameters:
      - description: Workspace numeric identifier
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Dataset string identifier
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      - description: Uploaded file has header
        explode: true
        in: query
        name: header
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultiRequestFileSchema'
        description: Dataset file request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadDatasetVersionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: Upload the content of a new dataset version
  /workspaces/{workspaceId}/datasets/{datasetId}/v/{version}/n/{fileName}:
    get:
      operationId: DownloadDataset
      parameters:
      - description: Workspace numeric identifier
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Dataset string identifier
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      - description: Version number to download
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: File name
        explode: false
        in: path
        name: fileName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
      security:
      - BearerAuth: []
      summary: Download the content of a dataset version
  /workspaces/{workspaceId}/datasets/{datasetId}/versions:
    get:
      operationId: ListDatasetVersions
      parameters:
      - description: Workspace numeric identifier
        explode: false
        in: path
        name: workspaceId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Dataset string identifier
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          type: string
        style: simple
      - description: Optional MIME type filter
        explode: true
        in: query
        name: mimeType
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatasetVersionsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "403":
          description: Operation not allowed
      security:
      - BearerAuth: []
      summary: List all versions of a dataset
components:
  requestBodies:
    inline_object:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object'
  schemas:
    AbstractGridConfig:
      properties:
        workDir:
          type: string
        launchDir:
          type: string
        userName:
          type: string
        hostName:
          type: string
        port:
          format: int32
          type: integer
        headQueue:
          type: string
        computeQueue:
          type: string
        maxQueueSize:
          format: int32
          type: integer
        headJobOptions:
          type: string
        propagateHeadJobOptions:
          type: boolean
        preRunScript:
          type: string
        postRunScript:
          type: string
      type: object
    AccessToken:
      example:
        lastUsed: 2000-01-23T04:56:07.000+00:00
        dateCreated: 2000-01-23T04:56:07.000+00:00
        basicAuth: basicAuth
        name: name
        id: 0
      properties:
        basicAuth:
          deprecated: true
          type: string
        id:
          format: int64
          nullable: true
          type: integer
        name:
          maxLength: 50
          minLength: 1
          type: string
        lastUsed:
          format: date-time
          type: string
        dateCreated:
          format: date-time
          type: string
      required:
      - name
      type: object
    Action.ConfigType:
      discriminator:
        mapping:
          github: '#/components/schemas/GithubActionConfig'
          tower: '#/components/schemas/Action.TowerActionConfig'
        propertyName: discriminator
      oneOf:
      - $ref: '#/components/schemas/Action.TowerActionConfig'
      - $ref: '#/components/schemas/GithubActionConfig'
      type: object
    Action.EventType:
      discriminator:
        mapping:
          github: '#/components/schemas/GithubActionEvent'
          tower: '#/components/schemas/Action.TowerActionEvent'
        propertyName: discriminator
      oneOf:
      - $ref: '#/components/schemas/GithubActionEvent'
      - $ref: '#/components/schemas/Action.TowerActionEvent'
      type: object
    Action.Source:
      enum:
      - github
      - tower
      type: string
    Action.Status:
      enum:
      - CREATING
      - ACTIVE
      - ERROR
      - PAUSED
      type: string
    Action.TowerActionConfig:
      properties:
        discriminator:
          readOnly: true
          type: string
      type: object
    Action.TowerActionEvent:
      properties:
        timestamp:
          format: date-time
          type: string
        workflowId:
          type: string
        discriminator:
          readOnly: true
          type: string
      type: object
    ActionQueryAttribute:
      enum:
      - labels
      type: string
    ActionResponseDto:
      example:
        launch:
          configText: configText
          stubRun: true
          configProfiles:
          - configProfiles
          - configProfiles
          preRunScript: preRunScript
          userSecrets:
          - userSecrets
          - userSecrets
          schemaName: schemaName
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          computeEnv: ""
          dateCreated: 2000-01-23T04:56:07.000+00:00
          runName: runName
          id: id
          workDir: workDir
          postRunScript: postRunScript
          paramsText: paramsText
          resume: true
          towerConfig: towerConfig
          mainScript: mainScript
          headJobMemoryMb: 6
          pullLatest: true
          headJobCpus: 0
          sessionId: sessionId
          revision: revision
          pipeline: pipeline
          optimizationId: optimizationId
          workspaceSecrets:
          - workspaceSecrets
          - workspaceSecrets
          entryName: entryName
          resumeLaunchId: resumeLaunchId
        hookUrl: hookUrl
        message: message
        labels:
        - resource: true
          name: name
          id: 0
          value: value
        - resource: true
          name: name
          id: 0
          value: value
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        lastSeen: 2000-01-23T04:56:07.000+00:00
        dateCreated: 2000-01-23T04:56:07.000+00:00
        hookId: hookId
        name: name
        id: id
      properties:
        id:
          type: string
        launch:
          $ref: '#/components/schemas/Launch'
        name:
          type: string
        hookId:
          type: string
        hookUrl:
          type: string
        message:
          type: string
        source:
          $ref: '#/components/schemas/Action.Source'
        status:
          $ref: '#/components/schemas/Action.Status'
        config:
          $ref: '#/components/schemas/Action.ConfigType'
        event:
          $ref: '#/components/schemas/Action.EventType'
        lastSeen:
          format: date-time
          type: string
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
        labels:
          items:
            $ref: '#/components/schemas/LabelDbDto'
          type: array
      type: object
    AddMemberRequest:
      example:
        user: user
      properties:
        user:
          type: string
      type: object
    AddMemberResponse:
      example:
        member:
          firstName: firstName
          lastName: lastName
          avatar: avatar
          userName: userName
          email: email
          memberId: 6
      properties:
        member:
          $ref: '#/components/schemas/MemberDbDto'
      type: object
    AddParticipantRequest:
      example:
        userNameOrEmail: userNameOrEmail
        teamId: 6
        memberId: 0
      properties:
        memberId:
          format: int64
          type: integer
        teamId:
          format: int64
          type: integer
        userNameOrEmail:
          type: string
      type: object
    AddParticipantResponse:
      example:
        participant:
          teamName: teamName
          lastName: lastName
          userAvatarUrl: userAvatarUrl
          userName: userName
          participantId: 1
          firstName: firstName
          teamId: 5
          email: email
          teamAvatarUrl: teamAvatarUrl
          memberId: 6
      properties:
        participant:
          $ref: '#/components/schemas/ParticipantDbDto'
      type: object
    AddTeamMemberResponse:
      example:
        member:
          firstName: firstName
          lastName: lastName
          avatar: avatar
          userName: userName
          email: email
          memberId: 6
      properties:
        member:
          $ref: '#/components/schemas/MemberDbDto'
      type: object
    AgentSecurityKeys:
      properties:
        connectionId:
          type: string
        workDir:
          type: string
        discriminator:
          readOnly: true
          type: string
      type: object
    AltairPbsComputeConfig:
      allOf:
      - $ref: '#/components/schemas/AbstractGridConfig'
      - $ref: '#/components/schemas/AltairPbsComputeConfig_allOf'
      title: Altair PBS configuration
    Analytics:
      example:
        siteId: 6
        url: url
      properties:
        url:
          type: string
        siteId:
          format: int32
          type: integer
      type: object
    AssociateActionLabelsRequest:
      example:
        actionIds:
        - actionIds
        - actionIds
        labelIds:
        - 0
        - 0
      properties:
        actionIds:
          items:
            type: string
          type: array
        labelIds:
          items:
            format: int64
            type: integer
          type: array
      type: object
    AssociatePipelineLabelsRequest:
      example:
        labelIds:
        - 6
        - 6
        pipelineIds:
        - 0
        - 0
      properties:
        pipelineIds:
          items:
            format: int64
            type: integer
          type: array
        labelIds:
          items:
            format: int64
            type: integer
          type: array
      type: object
    AssociateWorkflowLabelsRequest:
      example:
        workflowIds:
        - workflowIds
        - workflowIds
        labelIds:
        - 0
        - 0
      properties:
        workflowIds:
          items:
            type: string
          type: array
        labelIds:
          items:
            format: int64
            type: integer
          type: array
      type: object
    Avatar:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        dateCreated: 2000-01-23T04:56:07.000+00:00
        id: id
      properties:
        id:
          maxLength: 22
          type: string
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
      type: object
    AwsBatchConfig:
      properties:
        region:
          type: string
        computeQueue:
          type: string
        dragenQueue:
          type: string
        computeJobRole:
          type: string
        executionRole:
          type: string
        headQueue:
          type: string
        headJobRole:
          type: string
        cliPath:
          type: string
        volumes:
          items:
            type: string
          type: array
        workDir:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        headJobCpus:
          format: int32
          type: integer
        headJobMemoryMb:
          format: int32
          type: integer
        environment:
          items:
            $ref: '#/components/schemas/ConfigEnvVariable'
          type: array
        waveEnabled:
          type: boolean
        fusion2Enabled:
          type: boolean
        nvnmeStorageEnabled:
          type: boolean
        logsGroup:
          type: string
        forge:
          $ref: '#/components/schemas/ForgeConfig'
        forgedResources:
          items:
            additionalProperties: true
            type: object
          type: array
        discriminator:
          description: property to select the compute config platform
          readOnly: true
          type: string
      title: AWS Batch configuration
      type: object
    AwsBatchPlatformMetainfo:
      properties:
        warnings:
          items:
            type: string
          type: array
        jobQueues:
          items:
            $ref: '#/components/schemas/AwsBatchPlatformMetainfo.JobQueue'
          type: array
        buckets:
          items:
            $ref: '#/components/schemas/AwsBatchPlatformMetainfo.Bucket'
          type: array
        fileSystems:
          items:
            $ref: '#/components/schemas/AwsBatchPlatformMetainfo.FsxFileSystem'
          type: array
        efsFileSystems:
          items:
            $ref: '#/components/schemas/AwsBatchPlatformMetainfo.EfsFileSystem'
          type: array
        keyPairs:
          items:
            type: string
          type: array
        vpcs:
          items:
            $ref: '#/components/schemas/AwsBatchPlatformMetainfo.Vpc'
          type: array
        images:
          items:
            $ref: '#/components/schemas/AwsBatchPlatformMetainfo.Image'
          type: array
        securityGroups:
          items:
            $ref: '#/components/schemas/AwsBatchPlatformMetainfo.SecurityGroup'
          type: array
        subnets:
          items:
            $ref: '#/components/schemas/AwsBatchPlatformMetainfo.Subnet'
          type: array
        instanceFamilies:
          items:
            type: string
          type: array
        allocStrategy:
          items:
            type: string
          type: array
      type: object
    AwsBatchPlatformMetainfo.Bucket:
      properties:
        path:
          type: string
      type: object
    AwsBatchPlatformMetainfo.EfsFileSystem:
      properties:
        id:
          type: string
      type: object
    AwsBatchPlatformMetainfo.FsxFileSystem:
      properties:
        id:
          type: string
        dns:
          type: string
        mount:
          type: string
      type: object
    AwsBatchPlatformMetainfo.Image:
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
      type: object
    AwsBatchPlatformMetainfo.JobQueue:
      properties:
        name:
          type: string
        state:
          type: string
      required:
      - name
      - state
      type: object
    AwsBatchPlatformMetainfo.SecurityGroup:
      properties:
        id:
          type: string
        name:
          type: string
        vpcId:
          type: string
      type: object
    AwsBatchPlatformMetainfo.Subnet:
      properties:
        id:
          type: string
        zone:
          type: string
        vpcId:
          type: string
      type: object
    AwsBatchPlatformMetainfo.Vpc:
      properties:
        id:
          type: string
        isDefault:
          type: boolean
      type: object
    AwsSecurityKeys:
      properties:
        accessKey:
          type: string
        secretKey:
          type: string
          writeOnly: true
        assumeRoleArn:
          type: string
        discriminator:
          readOnly: true
          type: string
      type: object
    AzBatchConfig:
      properties:
        workDir:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        region:
          type: string
        headPool:
          type: string
        autoPoolMode:
          deprecated: true
          type: boolean
        forge:
          $ref: '#/components/schemas/AzBatchForgeConfig'
        tokenDuration:
          type: string
        deleteJobsOnCompletion:
          $ref: '#/components/schemas/JobCleanupPolicy'
        deletePoolsOnCompletion:
          type: boolean
        environment:
          items:
            $ref: '#/components/schemas/ConfigEnvVariable'
          type: array
        discriminator:
          description: property to select the compute config platform
          readOnly: true
          type: string
      title: Azure batch configuration
      type: object
    AzBatchForgeConfig:
      properties:
        vmType:
          type: string
        vmCount:
          format: int32
          type: integer
        autoScale:
          type: boolean
        disposeOnDeletion:
          type: boolean
        containerRegIds:
          items:
            type: string
          type: array
      type: object
    AzureSecurityKeys:
      properties:
        batchName:
          type: string
        batchKey:
          type: string
          writeOnly: true
        storageName:
          type: string
        storageKey:
          type: string
          writeOnly: true
        discriminator:
          readOnly: true
          type: string
      type: object
    BitBucketSecurityKeys:
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
        discriminator:
          readOnly: true
          type: string
      type: object
    CloudPriceModel:
      enum:
      - standard
      - spot
      type: string
    CodeCommitSecurityKeys:
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
        discriminator:
          readOnly: true
          type: string
      type: object
    ComputeConfig:
      discriminator:
        mapping:
          gke-platform: '#/components/schemas/GkeComputeConfig'
          google-batch: '#/components/schemas/GoogleBatchConfig'
          slurm-platform: '#/components/schemas/SlurmComputeConfig'
          k8s-platform: '#/components/schemas/K8sComputeConfig'
          altair-platform: '#/components/schemas/AltairPbsComputeConfig'
          lsf-platform: '#/components/schemas/LsfComputeConfig'
          moab-platform: '#/components/schemas/MoabComputeConfig'
          aws-batch: '#/components/schemas/AwsBatchConfig'
          azure-batch: '#/components/schemas/AzBatchConfig'
          eks-platform: '#/components/schemas/EksComputeConfig'
          google-lifesciences: '#/components/schemas/GoogleLifeSciencesConfig'
          uge-platform: '#/components/schemas/UnivaComputeConfig'
        propertyName: discriminator
      oneOf:
      - $ref: '#/components/schemas/AwsBatchConfig'
      - $ref: '#/components/schemas/GoogleLifeSciencesConfig'
      - $ref: '#/components/schemas/GoogleBatchConfig'
      - $ref: '#/components/schemas/AzBatchConfig'
      - $ref: '#/components/schemas/LsfComputeConfig'
      - $ref: '#/components/schemas/SlurmComputeConfig'
      - $ref: '#/components/schemas/K8sComputeConfig'
      - $ref: '#/components/schemas/EksComputeConfig'
      - $ref: '#/components/schemas/GkeComputeConfig'
      - $ref: '#/components/schemas/UnivaComputeConfig'
      - $ref: '#/components/schemas/AltairPbsComputeConfig'
      - $ref: '#/components/schemas/MoabComputeConfig'
      type: object
    ComputeEnv:
      example:
        description: description
        credentialsId: credentialsId
        message: message
        platform: aws-batch
        orgId: 0
        lastUsed: 2000-01-23T04:56:07.000+00:00
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        dateCreated: 2000-01-23T04:56:07.000+00:00
        deleted: true
        name: name
        id: id
        primary: true
        workspaceId: 6
      properties:
        id:
          maxLength: 22
          readOnly: true
          type: string
        name:
          maxLength: 100
          type: string
        description:
          maxLength: 2000
          type: string
        platform:
          enum:
          - aws-batch
          - google-lifesciences
          - google-batch
          - azure-batch
          - k8s-platform
          - eks-platform
          - gke-platform
          - uge-platform
          - slurm-platform
          - lsf-platform
          - altair-platform
          - moab-platform
          maxLength: 25
          type: string
        config:
          $ref: '#/components/schemas/ComputeConfig'
        dateCreated:
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        lastUsed:
          format: date-time
          readOnly: true
          type: string
        deleted:
          readOnly: true
          type: boolean
        status:
          $ref: '#/components/schemas/ComputeEnv.Status'
        message:
          maxLength: 4096
          type: string
        primary:
          readOnly: true
          type: boolean
        credentialsId:
          type: string
        orgId:
          format: int64
          readOnly: true
          type: integer
        workspaceId:
          format: int64
          readOnly: true
          type: integer
      required:
      - config
      - name
      type: object
    ComputeEnv.Status:
      enum:
      - CREATING
      - AVAILABLE
      - ERRORED
      - INVALID
      readOnly: true
      type: string
    ComputeEnvQueryAttribute:
      enum:
      - labels
      type: string
    ComputeEnvResponseDto:
      example:
        description: description
        credentialsId: credentialsId
        message: message
        platform: aws-batch
        orgId: 0
        labels:
        - resource: true
          name: name
          id: 0
          value: value
        - resource: true
          name: name
          id: 0
          value: value
        lastUsed: 2000-01-23T04:56:07.000+00:00
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        dateCreated: 2000-01-23T04:56:07.000+00:00
        deleted: true
        name: name
        id: id
        primary: true
        workspaceId: 6
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        platform:
          enum:
          - aws-batch
          - google-lifesciences
          - google-batch
          - azure-batch
          - k8s-platform
          - eks-platform
          - gke-platform
          - uge-platform
          - slurm-platform
          - lsf-platform
          - altair-platform
          type: string
        config:
          $ref: '#/components/schemas/ComputeConfig'
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
        lastUsed:
          format: date-time
          type: string
        deleted:
          type: boolean
        status:
          $ref: '#/components/schemas/ComputeEnv.Status'
        message:
          type: string
        primary:
          type: boolean
        credentialsId:
          type: string
        orgId:
          format: int64
          type: integer
        workspaceId:
          format: int64
          type: integer
        labels:
          items:
            $ref: '#/components/schemas/LabelDbDto'
          type: array
      type: object
    ComputePlatform:
      example:
        credentialsProviders:
        - credentialsProviders
        - credentialsProviders
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        credentialsProviders:
          items:
            type: string
          type: array
      type: object
    ComputePlatformDto:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    ComputeRegion:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    ConfigEnvVariable:
      properties:
        name:
          type: string
        value:
          type: string
        head:
          type: boolean
        compute:
          type: boolean
      type: object
    ContainerRegistryKeys:
      properties:
        userName:
          type: string
        password:
          type: string
          writeOnly: true
        registry:
          type: string
        discriminator:
          readOnly: true
          type: string
      type: object
    CreateAccessTokenRequest:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    CreateAccessTokenResponse:
      example:
        accessKey: accessKey
        token:
          lastUsed: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          basicAuth: basicAuth
          name: name
          id: 0
      properties:
        accessKey:
          type: string
        token:
          $ref: '#/components/schemas/AccessToken'
      type: object
    CreateActionRequest:
      example:
        name: name
        launch:
          configText: configText
          stubRun: true
          configProfiles:
          - configProfiles
          - configProfiles
          preRunScript: preRunScript
          userSecrets:
          - userSecrets
          - userSecrets
          schemaName: schemaName
          labelIds:
          - 0
          - 0
          dateCreated: 2000-01-23T04:56:07.000+00:00
          runName: runName
          computeEnvId: computeEnvId
          id: id
          workDir: workDir
          postRunScript: postRunScript
          paramsText: paramsText
          resume: true
          towerConfig: towerConfig
          mainScript: mainScript
          headJobMemoryMb: 1
          pullLatest: true
          headJobCpus: 6
          sessionId: sessionId
          revision: revision
          pipeline: pipeline
          optimizationId: optimizationId
          workspaceSecrets:
          - workspaceSecrets
          - workspaceSecrets
          entryName: entryName
      properties:
        name:
          type: string
        source:
          $ref: '#/components/schemas/Action.Source'
        launch:
          $ref: '#/components/schemas/WorkflowLaunchRequest'
      type: object
    CreateActionResponse:
      example:
        actionId: actionId
      properties:
        actionId:
          type: string
      type: object
    CreateAvatarResponse:
      example:
        avatar:
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          id: id
        url: url
      properties:
        avatar:
          $ref: '#/components/schemas/Avatar'
        url:
          type: string
      type: object
    CreateComputeEnvRequest:
      example:
        computeEnv:
          description: description
          credentialsId: credentialsId
          message: message
          platform: aws-batch
          orgId: 0
          lastUsed: 2000-01-23T04:56:07.000+00:00
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          deleted: true
          name: name
          id: id
          primary: true
          workspaceId: 6
        labelIds:
        - 1
        - 1
      properties:
        computeEnv:
          $ref: '#/components/schemas/ComputeEnv'
        labelIds:
          items:
            format: int64
            type: integer
          type: array
      type: object
    CreateComputeEnvResponse:
      example:
        computeEnvId: computeEnvId
      properties:
        computeEnvId:
          type: string
      type: object
    CreateCredentialsRequest:
      example:
        credentials:
          lastUsed: 2000-01-23T04:56:07.000+00:00
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          baseUrl: baseUrl
          deleted: true
          dateCreated: 2000-01-23T04:56:07.000+00:00
          provider: aws
          name: name
          description: description
          id: id
          category: category
      properties:
        credentials:
          $ref: '#/components/schemas/CredentialsSpec'
      type: object
    CreateCredentialsResponse:
      example:
        credentialsId: credentialsId
      properties:
        credentialsId:
          type: string
      type: object
    CreateDatasetRequest:
      example:
        name: name
        description: description
      properties:
        name:
          type: string
        description:
          type: string
      type: object
    CreateDatasetResponse:
      example:
        dataset:
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          deleted: true
          dateCreated: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          mediaType: mediaType
          id: id
      properties:
        dataset:
          $ref: '#/components/schemas/Dataset'
      type: object
    CreateLabelRequest:
      example:
        resource: true
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
        resource:
          type: boolean
      type: object
    CreateLabelResponse:
      example:
        resource: true
        name: name
        id: 0
        value: value
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        value:
          type: string
        resource:
          type: boolean
      type: object
    CreateOrganizationRequest:
      example:
        organization:
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          website: website
          dateCreated: 2000-01-23T04:56:07.000+00:00
          name: name
          fullName: fullName
          description: description
          location: location
          id: 0
        logoId: logoId
      properties:
        organization:
          $ref: '#/components/schemas/Organization'
        logoId:
          type: string
      type: object
    CreateOrganizationResponse:
      example:
        organization:
          website: website
          name: name
          fullName: fullName
          description: description
          location: location
          orgId: 0
          logoId: logoId
          logoUrl: logoUrl
          memberId: 6
      properties:
        organization:
          $ref: '#/components/schemas/OrganizationDbDto'
      type: object
    CreatePipelineRequest:
      example:
        labelIds:
        - 0
        - 0
        name: name
        icon: icon
        description: description
        launch:
          configText: configText
          stubRun: true
          configProfiles:
          - configProfiles
          - configProfiles
          preRunScript: preRunScript
          userSecrets:
          - userSecrets
          - userSecrets
          schemaName: schemaName
          labelIds:
          - 0
          - 0
          dateCreated: 2000-01-23T04:56:07.000+00:00
          runName: runName
          computeEnvId: computeEnvId
          id: id
          workDir: workDir
          postRunScript: postRunScript
          paramsText: paramsText
          resume: true
          towerConfig: towerConfig
          mainScript: mainScript
          headJobMemoryMb: 1
          pullLatest: true
          headJobCpus: 6
          sessionId: sessionId
          revision: revision
          pipeline: pipeline
          optimizationId: optimizationId
          workspaceSecrets:
          - workspaceSecrets
          - workspaceSecrets
          entryName: entryName
      properties:
        name:
          type: string
        description:
          type: string
        icon:
          type: string
        launch:
          $ref: '#/components/schemas/WorkflowLaunchRequest'
        labelIds:
          items:
            format: int64
            type: integer
          type: array
      type: object
    CreatePipelineResponse:
      example:
        pipeline:
          orgName: orgName
          visibility: visibility
          optimized: true
          icon: icon
          description: description
          userFirstName: userFirstName
          repository: repository
          userName: userName
          userId: 6
          orgId: 1
          pipelineId: 0
          labels:
          - resource: true
            name: name
            id: 0
            value: value
          - resource: true
            name: name
            id: 0
            value: value
          userLastName: userLastName
          name: name
          workspaceName: workspaceName
          workspaceId: 5
      properties:
        pipeline:
          $ref: '#/components/schemas/PipelineDbDto'
      type: object
    CreatePipelineSecretRequest:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    CreatePipelineSecretResponse:
      example:
        secretId: 0
      properties:
        secretId:
          format: int64
          type: integer
      type: object
    CreateTeamMemberRequest:
      example:
        userNameOrEmail: userNameOrEmail
      properties:
        userNameOrEmail:
          type: string
      type: object
    CreateTeamRequest:
      example:
        avatarId: avatarId
        team:
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          id: 0
      properties:
        team:
          $ref: '#/components/schemas/Team'
        avatarId:
          type: string
      type: object
    CreateTeamResponse:
      example:
        team:
          membersCount: 6
          avatarUrl: avatarUrl
          teamId: 0
          name: name
          description: description
      properties:
        team:
          $ref: '#/components/schemas/TeamDbDto'
      type: object
    CreateWorkflowStarResponse:
      example:
        workflowId: workflowId
      properties:
        workflowId:
          type: string
      type: object
    CreateWorkspaceRequest:
      example:
        workspace:
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          name: name
          fullName: fullName
          description: description
          id: 0
      properties:
        workspace:
          $ref: '#/components/schemas/Workspace'
      type: object
    CreateWorkspaceResponse:
      example:
        workspace:
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          name: name
          fullName: fullName
          description: description
          id: 0
      properties:
        workspace:
          $ref: '#/components/schemas/Workspace'
      type: object
    Credentials:
      example:
        lastUsed: 2000-01-23T04:56:07.000+00:00
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        baseUrl: baseUrl
        deleted: true
        dateCreated: 2000-01-23T04:56:07.000+00:00
        provider: aws
        name: name
        description: description
        id: id
        category: category
      properties:
        id:
          maxLength: 22
          type: string
        name:
          maxLength: 100
          type: string
        description:
          type: string
        provider:
          enum:
          - aws
          - azure
          - google
          - github
          - gitlab
          - bitbucket
          - ssh
          - k8s
          - container-reg
          - tw-agent
          - codecommit
          maxLength: 16
          type: string
        baseUrl:
          maxLength: 200
          type: string
        category:
          maxLength: 20
          type: string
        deleted:
          readOnly: true
          type: boolean
        lastUsed:
          format: date-time
          readOnly: true
          type: string
        dateCreated:
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        keys:
          $ref: '#/components/schemas/SecurityKeys'
      required:
      - name
      type: object
    CredentialsSpec:
      example:
        lastUsed: 2000-01-23T04:56:07.000+00:00
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        baseUrl: baseUrl
        deleted: true
        dateCreated: 2000-01-23T04:56:07.000+00:00
        provider: aws
        name: name
        description: description
        id: id
        category: category
      properties:
        keys:
          $ref: '#/components/schemas/SecurityKeys'
        id:
          maxLength: 22
          type: string
        name:
          maxLength: 100
          type: string
        description:
          type: string
        provider:
          enum:
          - aws
          - azure
          - google
          - github
          - gitlab
          - bitbucket
          - ssh
          - k8s
          - container-reg
          - tw-agent
          - codecommit
          maxLength: 16
          type: string
        baseUrl:
          maxLength: 200
          type: string
        category:
          maxLength: 20
          type: string
        deleted:
          readOnly: true
          type: boolean
        lastUsed:
          format: date-time
          readOnly: true
          type: string
        dateCreated:
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
      required:
      - name
      type: object
    Dataset:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        deleted: true
        dateCreated: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        mediaType: mediaType
        id: id
      properties:
        id:
          maxLength: 22
          type: string
        name:
          maxLength: 100
          pattern: ^[a-zA-Z\d](?:[a-zA-Z\d]|[-_](?=[a-zA-Z\d])){1,98}$
          type: string
        description:
          maxLength: 1000
          type: string
        mediaType:
          maxLength: 80
          type: string
        deleted:
          readOnly: true
          type: boolean
        dateCreated:
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
      required:
      - name
      type: object
    DatasetVersionDbDto:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        datasetDescription: datasetDescription
        hasHeader: true
        fileName: fileName
        datasetName: datasetName
        datasetId: datasetId
        mediaType: mediaType
        version: 0
        url: url
      properties:
        datasetId:
          type: string
        datasetName:
          type: string
        datasetDescription:
          type: string
        hasHeader:
          type: boolean
        version:
          format: int64
          type: integer
        lastUpdated:
          format: date-time
          type: string
        fileName:
          type: string
        mediaType:
          type: string
        url:
          type: string
      type: object
    DeleteWorkflowsRequest:
      example:
        workflowIds:
        - workflowIds
        - workflowIds
      properties:
        workflowIds:
          items:
            type: string
          type: array
      type: object
    DeleteWorkflowsResponse:
      example:
        failedWorkflowIds:
        - failedWorkflowIds
        - failedWorkflowIds
      properties:
        failedWorkflowIds:
          items:
            type: string
          type: array
      type: object
    DescribeActionResponse:
      example:
        action:
          launch:
            configText: configText
            stubRun: true
            configProfiles:
            - configProfiles
            - configProfiles
            preRunScript: preRunScript
            userSecrets:
            - userSecrets
            - userSecrets
            schemaName: schemaName
            lastUpdated: 2000-01-23T04:56:07.000+00:00
            computeEnv: ""
            dateCreated: 2000-01-23T04:56:07.000+00:00
            runName: runName
            id: id
            workDir: workDir
            postRunScript: postRunScript
            paramsText: paramsText
            resume: true
            towerConfig: towerConfig
            mainScript: mainScript
            headJobMemoryMb: 6
            pullLatest: true
            headJobCpus: 0
            sessionId: sessionId
            revision: revision
            pipeline: pipeline
            optimizationId: optimizationId
            workspaceSecrets:
            - workspaceSecrets
            - workspaceSecrets
            entryName: entryName
            resumeLaunchId: resumeLaunchId
          hookUrl: hookUrl
          message: message
          labels:
          - resource: true
            name: name
            id: 0
            value: value
          - resource: true
            name: name
            id: 0
            value: value
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          lastSeen: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          hookId: hookId
          name: name
          id: id
      properties:
        action:
          $ref: '#/components/schemas/ActionResponseDto'
      type: object
    DescribeComputeEnvResponse:
      example:
        computeEnv:
          description: description
          credentialsId: credentialsId
          message: message
          platform: aws-batch
          orgId: 0
          labels:
          - resource: true
            name: name
            id: 0
            value: value
          - resource: true
            name: name
            id: 0
            value: value
          lastUsed: 2000-01-23T04:56:07.000+00:00
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          deleted: true
          name: name
          id: id
          primary: true
          workspaceId: 6
      properties:
        computeEnv:
          $ref: '#/components/schemas/ComputeEnvResponseDto'
      type: object
    DescribeCredentialsResponse:
      example:
        credentials:
          lastUsed: 2000-01-23T04:56:07.000+00:00
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          baseUrl: baseUrl
          deleted: true
          dateCreated: 2000-01-23T04:56:07.000+00:00
          provider: aws
          name: name
          description: description
          id: id
          category: category
      properties:
        credentials:
          $ref: '#/components/schemas/Credentials'
      type: object
    DescribeDatasetResponse:
      example:
        dataset:
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          deleted: true
          dateCreated: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          mediaType: mediaType
          id: id
      properties:
        dataset:
          $ref: '#/components/schemas/Dataset'
      type: object
    DescribeLaunchResponse:
      example:
        launch:
          configText: configText
          stubRun: true
          configProfiles:
          - configProfiles
          - configProfiles
          preRunScript: preRunScript
          userSecrets:
          - userSecrets
          - userSecrets
          schemaName: schemaName
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          computeEnv: ""
          dateCreated: 2000-01-23T04:56:07.000+00:00
          runName: runName
          id: id
          workDir: workDir
          postRunScript: postRunScript
          paramsText: paramsText
          resume: true
          towerConfig: towerConfig
          mainScript: mainScript
          headJobMemoryMb: 6
          pullLatest: true
          headJobCpus: 0
          sessionId: sessionId
          revision: revision
          pipeline: pipeline
          optimizationId: optimizationId
          workspaceSecrets:
          - workspaceSecrets
          - workspaceSecrets
          entryName: entryName
          resumeLaunchId: resumeLaunchId
      properties:
        launch:
          $ref: '#/components/schemas/Launch'
      type: object
    DescribeOrganizationResponse:
      example:
        organization:
          website: website
          name: name
          fullName: fullName
          description: description
          location: location
          orgId: 0
          logoId: logoId
          logoUrl: logoUrl
          memberId: 6
      properties:
        organization:
          $ref: '#/components/schemas/OrganizationDbDto'
      type: object
    DescribePipelineInfoResponse:
      example:
        pipelineInfo:
          configFiles:
          - configFiles
          - configFiles
          simpleName: simpleName
          provider: provider
          manifest:
            mainScript: mainScript
            nextflowVersion: nextflowVersion
            author: author
            defaultBranch: defaultBranch
            name: name
            description: description
            gitmodules: gitmodules
            version: version
            homePage: homePage
          warnings:
          - warnings
          - warnings
          profiles:
          - profiles
          - profiles
          revisions:
          - revisions
          - revisions
          workDirs:
          - workDirs
          - workDirs
          projectName: projectName
          cloneUrl: cloneUrl
          repositoryUrl: repositoryUrl
      properties:
        pipelineInfo:
          $ref: '#/components/schemas/PipelineInfo'
      type: object
    DescribePipelineResponse:
      example:
        pipeline:
          orgName: orgName
          visibility: visibility
          optimized: true
          icon: icon
          description: description
          userFirstName: userFirstName
          repository: repository
          userName: userName
          userId: 6
          orgId: 1
          pipelineId: 0
          labels:
          - resource: true
            name: name
            id: 0
            value: value
          - resource: true
            name: name
            id: 0
            value: value
          userLastName: userLastName
          name: name
          workspaceName: workspaceName
          workspaceId: 5
      properties:
        pipeline:
          $ref: '#/components/schemas/PipelineDbDto'
      type: object
    DescribePipelineSecretResponse:
      example:
        pipelineSecret:
          lastUsed: 2000-01-23T04:56:07.000+00:00
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 0
      properties:
        pipelineSecret:
          $ref: '#/components/schemas/PipelineSecret'
      type: object
    DescribePlatformResponse:
      example: {}
      properties:
        metainfo:
          $ref: '#/components/schemas/PlatformMetainfo'
      type: object
    DescribeTaskResponse:
      example:
        task:
          container: container
          pcpu: 2.027123023002322
          syscw: 4
          attempt: 0
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          executor: executor
          tag: tag
          id: 8
          cloudZone: cloudZone
          realtime: 3
          module:
          - module
          - module
          vmem: 1
          scratch: scratch
          script: script
          exit: exit
          disk: 5
          writeBytes: 9
          workdir: workdir
          name: name
          volCtxt: 9
          rchar: 6
          hash: hash
          memory: 1
          submit: 2000-01-23T04:56:07.000+00:00
          duration: 9
          pmem: 4.145608029883936
          rss: 7
          dateCreated: 2000-01-23T04:56:07.000+00:00
          machineType: machineType
          exitStatus: 7
          process: process
          cost: 2.3021358869347655
          cpus: 6
          start: 2000-01-23T04:56:07.000+00:00
          env: env
          peakRss: 1
          syscr: 1
          peakVmem: 1
          wchar: 7
          readBytes: 5
          time: 5
          errorAction: errorAction
          complete: 2000-01-23T04:56:07.000+00:00
          nativeId: nativeId
          invCtxt: 6
          queue: queue
          taskId: 9
      properties:
        task:
          $ref: '#/components/schemas/Task'
      type: object
    DescribeUserResponse:
      example:
        defaultWorkspaceId: 6
        needConsent: true
        user:
          lastName: lastName
          description: description
          lastAccess: 2000-01-23T04:56:07.000+00:00
          avatar: avatar
          userName: userName
          termsOfUseConsent: true
          firstName: firstName
          notification: true
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          deleted: true
          organization: organization
          marketingConsent: true
          id: 0
          email: email
      properties:
        user:
          $ref: '#/components/schemas/User'
        needConsent:
          type: boolean
        defaultWorkspaceId:
          format: int64
          type: integer
      type: object
    DescribeWorkflowLaunchResponse:
      example:
        launch:
          configText: configText
          resume: true
          stubRun: true
          towerConfig: towerConfig
          configProfiles:
          - configProfiles
          - configProfiles
          mainScript: mainScript
          preRunScript: preRunScript
          userSecrets:
          - userSecrets
          - userSecrets
          pullLatest: true
          sessionId: sessionId
          schemaName: schemaName
          revision: revision
          pipeline: pipeline
          workspaceSecrets:
          - workspaceSecrets
          - workspaceSecrets
          resumeDir: resumeDir
          computeEnv:
            description: description
            credentialsId: credentialsId
            message: message
            platform: aws-batch
            orgId: 0
            lastUsed: 2000-01-23T04:56:07.000+00:00
            lastUpdated: 2000-01-23T04:56:07.000+00:00
            dateCreated: 2000-01-23T04:56:07.000+00:00
            deleted: true
            name: name
            id: id
            primary: true
            workspaceId: 6
          dateCreated: 2000-01-23T04:56:07.000+00:00
          entryName: entryName
          id: id
          workDir: workDir
          postRunScript: postRunScript
          paramsText: paramsText
          resumeCommitId: resumeCommitId
      properties:
        launch:
          $ref: '#/components/schemas/WorkflowLaunchResponse'
      type: object
    DescribeWorkflowResponse:
      example:
        workflow:
          configText: configText
          container: container
          submit: 2000-01-23T04:56:07.000+00:00
          ownerId: 0
          repository: repository
          homeDir: homeDir
          nextflow:
            build: build
            version: version
            timestamp: 2000-01-23T04:56:07.000+00:00
          duration: 1
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          outFile: outFile
          stats:
            ignoredCount: 5
            failedCountFmt: failedCountFmt
            succeedPct: 9.301444
            succeedCount: 5
            cachedCountFmt: cachedCountFmt
            succeedCountFmt: succeedCountFmt
            failedPct: 7.0614014
            ignoredPct: 3.6160767
            succeedDuration: 7
            cachedDuration: 2
            failedCount: 1
            ignoredCountFmt: ignoredCountFmt
            cachedPct: 2.302136
            cachedCount: 6
            computeTimeFmt: computeTimeFmt
            failedDuration: 4
          runName: runName
          launchDir: launchDir
          operationId: operationId
          id: id
          workDir: workDir
          errorReport: errorReport
          exitStatus: 1
          projectDir: projectDir
          resume: true
          manifest:
            mainScript: mainScript
            nextflowVersion: nextflowVersion
            author: author
            defaultBranch: defaultBranch
            name: name
            description: description
            gitmodules: gitmodules
            version: version
            homePage: homePage
          profile: profile
          start: 2000-01-23T04:56:07.000+00:00
          errorMessage: errorMessage
          sessionId: sessionId
          commitId: commitId
          userName: userName
          params:
            key: '{}'
          scriptFile: scriptFile
          revision: revision
          launchId: launchId
          scriptId: scriptId
          configFiles:
          - configFiles
          - configFiles
          deleted: true
          success: true
          logFile: logFile
          scriptName: scriptName
          containerEngine: containerEngine
          complete: 2000-01-23T04:56:07.000+00:00
          commandLine: commandLine
          projectName: projectName
        optimized: true
        progress:
          processesProgress:
          - pending: 6
            peakTasks: 3
            running: 2
            lastUpdated: 2000-01-23T04:56:07.000+00:00
            cpuLoad: 0
            dateCreated: 2000-01-23T04:56:07.000+00:00
            cpuTime: 7
            peakMemory: 4
            cached: 5
            loadMemory: 7
            process: process
            cpus: 3
            loadTasks: 3
            peakCpus: 5
            failed: 6
            loadCpus: 3
            volCtxSwitch: 8
            submitted: 1
            writeBytes: 4
            invCtxSwitch: 7
            memoryReq: 6
            memoryEfficiency: 6.704019
            cpuEfficiency: 3.3531933
            memoryRss: 7
            readBytes: 0
            succeeded: 6
          - pending: 6
            peakTasks: 3
            running: 2
            lastUpdated: 2000-01-23T04:56:07.000+00:00
            cpuLoad: 0
            dateCreated: 2000-01-23T04:56:07.000+00:00
            cpuTime: 7
            peakMemory: 4
            cached: 5
            loadMemory: 7
            process: process
            cpus: 3
            loadTasks: 3
            peakCpus: 5
            failed: 6
            loadCpus: 3
            volCtxSwitch: 8
            submitted: 1
            writeBytes: 4
            invCtxSwitch: 7
            memoryReq: 6
            memoryEfficiency: 6.704019
            cpuEfficiency: 3.3531933
            memoryRss: 7
            readBytes: 0
            succeeded: 6
          workflowProgress:
            pending: 5
            peakTasks: 6
            running: 2
            lastUpdated: 2000-01-23T04:56:07.000+00:00
            cpuLoad: 1
            dateCreated: 2000-01-23T04:56:07.000+00:00
            cpuTime: 1
            peakMemory: 3
            cached: 3
            loadMemory: 8
            cost: 9.965781217890562
            cpus: 7
            loadTasks: 9
            peakCpus: 9
            failed: 9
            loadCpus: 6
            volCtxSwitch: 4
            submitted: 5
            writeBytes: 1
            invCtxSwitch: 5
            memoryReq: 6
            memoryEfficiency: 2.027123
            cpuEfficiency: 4.145608
            memoryRss: 1
            readBytes: 7
            executors:
            - executors
            - executors
            succeeded: 7
        jobInfo:
          operationId: operationId
          exitCode: 6
          id: 0
          message: message
          status: status
        platform:
          name: name
          id: id
        labels:
        - resource: true
          name: name
          id: 0
          value: value
        - resource: true
          name: name
          id: 0
          value: value
      properties:
        workflow:
          $ref: '#/components/schemas/Workflow'
        progress:
          $ref: '#/components/schemas/ProgressData'
        platform:
          $ref: '#/components/schemas/ComputePlatformDto'
        jobInfo:
          $ref: '#/components/schemas/JobInfoDto'
        labels:
          items:
            $ref: '#/components/schemas/LabelDbDto'
          type: array
        optimized:
          type: boolean
      type: object
    DescribeWorkspaceResponse:
      example:
        workspace:
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          name: name
          fullName: fullName
          description: description
          id: 0
      properties:
        workspace:
          $ref: '#/components/schemas/Workspace'
      type: object
    EksComputeConfig:
      allOf:
      - $ref: '#/components/schemas/K8sComputeConfig'
      - $ref: '#/components/schemas/EksComputeConfig_allOf'
      title: Amazon EKS cluster configuration
    EmptyBodyRequest:
      type: object
    ErrorResponse:
      properties:
        message:
          type: string
      required:
      - message
      type: object
    EventType:
      example:
        display: display
        description: description
        source: source
        enabled: true
      properties:
        source:
          type: string
        display:
          type: string
        description:
          type: string
        enabled:
          type: boolean
      type: object
    ForgeConfig:
      properties:
        type:
          enum:
          - SPOT
          - EC2
          type: string
        minCpus:
          format: int32
          type: integer
        maxCpus:
          format: int32
          type: integer
        gpuEnabled:
          type: boolean
        ebsAutoScale:
          type: boolean
        instanceTypes:
          items:
            type: string
          type: array
        allocStrategy:
          enum:
          - BEST_FIT
          - BEST_FIT_PROGRESSIVE
          - SPOT_CAPACITY_OPTIMIZED
          type: string
        imageId:
          type: string
        vpcId:
          type: string
        subnets:
          items:
            type: string
          type: array
        securityGroups:
          items:
            type: string
          type: array
        fsxMount:
          type: string
        fsxName:
          type: string
        fsxSize:
          format: int32
          type: integer
        disposeOnDeletion:
          type: boolean
        ec2KeyPair:
          type: string
        allowBuckets:
          items:
            type: string
          type: array
        ebsBlockSize:
          format: int32
          type: integer
        fusionEnabled:
          type: boolean
        bidPercentage:
          format: int32
          type: integer
        efsCreate:
          type: boolean
        efsId:
          type: string
        efsMount:
          type: string
        dragenEnabled:
          type: boolean
        dragenAmiId:
          type: string
        ebsBootSize:
          format: int32
          type: integer
      type: object
    GetProgressResponse:
      example:
        progress:
          processesProgress:
          - pending: 6
            peakTasks: 3
            running: 2
            lastUpdated: 2000-01-23T04:56:07.000+00:00
            cpuLoad: 0
            dateCreated: 2000-01-23T04:56:07.000+00:00
            cpuTime: 7
            peakMemory: 4
            cached: 5
            loadMemory: 7
            process: process
            cpus: 3
            loadTasks: 3
            peakCpus: 5
            failed: 6
            loadCpus: 3
            volCtxSwitch: 8
            submitted: 1
            writeBytes: 4
            invCtxSwitch: 7
            memoryReq: 6
            memoryEfficiency: 6.704019
            cpuEfficiency: 3.3531933
            memoryRss: 7
            readBytes: 0
            succeeded: 6
          - pending: 6
            peakTasks: 3
            running: 2
            lastUpdated: 2000-01-23T04:56:07.000+00:00
            cpuLoad: 0
            dateCreated: 2000-01-23T04:56:07.000+00:00
            cpuTime: 7
            peakMemory: 4
            cached: 5
            loadMemory: 7
            process: process
            cpus: 3
            loadTasks: 3
            peakCpus: 5
            failed: 6
            loadCpus: 3
            volCtxSwitch: 8
            submitted: 1
            writeBytes: 4
            invCtxSwitch: 7
            memoryReq: 6
            memoryEfficiency: 6.704019
            cpuEfficiency: 3.3531933
            memoryRss: 7
            readBytes: 0
            succeeded: 6
          workflowProgress:
            pending: 5
            peakTasks: 6
            running: 2
            lastUpdated: 2000-01-23T04:56:07.000+00:00
            cpuLoad: 1
            dateCreated: 2000-01-23T04:56:07.000+00:00
            cpuTime: 1
            peakMemory: 3
            cached: 3
            loadMemory: 8
            cost: 9.965781217890562
            cpus: 7
            loadTasks: 9
            peakCpus: 9
            failed: 9
            loadCpus: 6
            volCtxSwitch: 4
            submitted: 5
            writeBytes: 1
            invCtxSwitch: 5
            memoryReq: 6
            memoryEfficiency: 2.027123
            cpuEfficiency: 4.145608
            memoryRss: 1
            readBytes: 7
            executors:
            - executors
            - executors
            succeeded: 7
      properties:
        progress:
          $ref: '#/components/schemas/ProgressData'
      type: object
    GetWorkflowMetricsResponse:
      example:
        metrics:
        - cpuUsage:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          process: process
          mem:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          memUsage:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          timeUsage:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          vmem:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          reads:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          cpu:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          id: 0
          time:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          writes:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
        - cpuUsage:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          process: process
          mem:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          memUsage:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          timeUsage:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          vmem:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          reads:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          cpu:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          id: 0
          time:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          writes:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
      properties:
        metrics:
          items:
            $ref: '#/components/schemas/WorkflowMetrics'
          type: array
      type: object
    GitHubSecurityKeys:
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
        discriminator:
          readOnly: true
          type: string
      type: object
    GitLabSecurityKeys:
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
        token:
          type: string
          writeOnly: true
        discriminator:
          readOnly: true
          type: string
      type: object
    GithubActionConfig:
      properties:
        events:
          items:
            type: string
          type: array
        discriminator:
          readOnly: true
          type: string
      type: object
    GithubActionEvent:
      properties:
        ref:
          type: string
        commitId:
          type: string
        commitMessage:
          type: string
        pusherName:
          type: string
        pusherEmail:
          type: string
        timestamp:
          format: date-time
          type: string
        discriminator:
          readOnly: true
          type: string
      type: object
    GkeComputeConfig:
      allOf:
      - $ref: '#/components/schemas/K8sComputeConfig'
      - $ref: '#/components/schemas/GkeComputeConfig_allOf'
      title: Google GKE cluster configuration
    GoogleBatchConfig:
      properties:
        location:
          type: string
        workDir:
          type: string
        spot:
          type: boolean
        bootDiskSizeGb:
          format: int32
          type: integer
        cpuPlatform:
          type: string
        machineType:
          type: string
        projectId:
          type: string
        sshDaemon:
          type: boolean
        sshImage:
          type: string
        debugMode:
          format: int32
          type: integer
        copyImage:
          type: string
        usePrivateAddress:
          type: boolean
        labels:
          additionalProperties:
            type: string
          type: object
        preRunScript:
          type: string
        postRunScript:
          type: string
        headJobCpus:
          format: int32
          type: integer
        headJobMemoryMb:
          format: int32
          type: integer
        nfsTarget:
          type: string
        nfsMount:
          type: string
        environment:
          items:
            $ref: '#/components/schemas/ConfigEnvVariable'
          type: array
        discriminator:
          description: property to select the compute config platform
          readOnly: true
          type: string
      title: Google Batch service configuration
      type: object
    GoogleLifeSciencesConfig:
      properties:
        region:
          type: string
        zones:
          items:
            type: string
          type: array
        location:
          type: string
        workDir:
          type: string
        preemptible:
          type: boolean
        bootDiskSizeGb:
          format: int32
          type: integer
        projectId:
          type: string
        sshDaemon:
          type: boolean
        sshImage:
          type: string
        debugMode:
          format: int32
          type: integer
        copyImage:
          type: string
        usePrivateAddress:
          type: boolean
        labels:
          additionalProperties:
            type: string
          type: object
        preRunScript:
          type: string
        postRunScript:
          type: string
        headJobCpus:
          format: int32
          type: integer
        headJobMemoryMb:
          format: int32
          type: integer
        nfsTarget:
          type: string
        nfsMount:
          type: string
        environment:
          items:
            $ref: '#/components/schemas/ConfigEnvVariable'
          type: array
        discriminator:
          description: property to select the compute config platform
          readOnly: true
          type: string
      title: Google life sciences configuration
      type: object
    GooglePlatformMetainfo:
      properties:
        warnings:
          items:
            type: string
          type: array
        zones:
          items:
            type: string
          type: array
        locations:
          items:
            type: string
          type: array
        buckets:
          items:
            $ref: '#/components/schemas/GooglePlatformMetainfo.Bucket'
          type: array
        filestores:
          items:
            $ref: '#/components/schemas/GooglePlatformMetainfo.Filestore'
          type: array
      type: object
    GooglePlatformMetainfo.Bucket:
      properties:
        path:
          type: string
      type: object
    GooglePlatformMetainfo.Filestore:
      properties:
        name:
          type: string
        location:
          type: string
        target:
          type: string
      type: object
    GoogleSecurityKeys:
      properties:
        data:
          type: string
          writeOnly: true
        discriminator:
          readOnly: true
          type: string
      type: object
    Iterator_String_:
      type: object
    JobCleanupPolicy:
      enum:
      - on_success
      - always
      - never
      type: string
    JobInfoDto:
      example:
        operationId: operationId
        exitCode: 6
        id: 0
        message: message
        status: status
      properties:
        id:
          format: int64
          type: integer
        operationId:
          type: string
        message:
          type: string
        status:
          type: string
        exitCode:
          format: int32
          type: integer
      type: object
    K8sComputeConfig:
      properties:
        workDir:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        server:
          type: string
        sslCert:
          type: string
        namespace:
          type: string
        computeServiceAccount:
          type: string
        headServiceAccount:
          type: string
        storageClaimName:
          type: string
        storageMountPath:
          type: string
        podCleanup:
          $ref: '#/components/schemas/PodCleanupPolicy'
        headPodSpec:
          type: string
        servicePodSpec:
          type: string
        environment:
          items:
            $ref: '#/components/schemas/ConfigEnvVariable'
          type: array
        headJobCpus:
          format: int32
          type: integer
        headJobMemoryMb:
          format: int32
          type: integer
        discriminator:
          description: property to select the compute config platform
          readOnly: true
          type: string
      title: Kubernetes compute configuration
      type: object
    K8sSecurityKeys:
      properties:
        certificate:
          type: string
        privateKey:
          type: string
          writeOnly: true
        token:
          type: string
          writeOnly: true
        discriminator:
          readOnly: true
          type: string
      type: object
    LabelDbDto:
      example:
        resource: true
        name: name
        id: 0
        value: value
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        value:
          type: string
        resource:
          type: boolean
      type: object
    Launch:
      example:
        configText: configText
        stubRun: true
        configProfiles:
        - configProfiles
        - configProfiles
        preRunScript: preRunScript
        userSecrets:
        - userSecrets
        - userSecrets
        schemaName: schemaName
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        computeEnv: ""
        dateCreated: 2000-01-23T04:56:07.000+00:00
        runName: runName
        id: id
        workDir: workDir
        postRunScript: postRunScript
        paramsText: paramsText
        resume: true
        towerConfig: towerConfig
        mainScript: mainScript
        headJobMemoryMb: 6
        pullLatest: true
        headJobCpus: 0
        sessionId: sessionId
        revision: revision
        pipeline: pipeline
        optimizationId: optimizationId
        workspaceSecrets:
        - workspaceSecrets
        - workspaceSecrets
        entryName: entryName
        resumeLaunchId: resumeLaunchId
      properties:
        id:
          maxLength: 22
          type: string
        computeEnv:
          allOf:
          - $ref: '#/components/schemas/ComputeEnv'
          - nullable: true
            type: object
        pipeline:
          maxLength: 100
          type: string
        workDir:
          type: string
        revision:
          maxLength: 100
          type: string
        configText:
          type: string
        towerConfig:
          type: string
        paramsText:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        mainScript:
          maxLength: 200
          type: string
        entryName:
          maxLength: 80
          type: string
        schemaName:
          maxLength: 100
          pattern: '[\p{Graph}&&[^/]]\p{Graph}+'
          type: string
        resume:
          type: boolean
        resumeLaunchId:
          maxLength: 22
          type: string
        pullLatest:
          type: boolean
        stubRun:
          type: boolean
        sessionId:
          maxLength: 36
          type: string
        runName:
          maxLength: 80
          type: string
        configProfiles:
          items:
            type: string
          type: array
        userSecrets:
          items:
            type: string
          type: array
        workspaceSecrets:
          items:
            type: string
          type: array
        optimizationId:
          type: string
        headJobCpus:
          format: int32
          type: integer
        headJobMemoryMb:
          format: int32
          type: integer
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
      required:
      - dateCreated
      - pipeline
      type: object
    LaunchActionRequest:
      example:
        params:
          key: '{}'
      properties:
        params:
          additionalProperties: true
          type: object
      type: object
    LaunchActionResponse:
      example:
        workflowId: workflowId
      properties:
        workflowId:
          type: string
      type: object
    ListAccessTokensResponse:
      example:
        tokens:
        - lastUsed: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          basicAuth: basicAuth
          name: name
          id: 0
        - lastUsed: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          basicAuth: basicAuth
          name: name
          id: 0
      properties:
        tokens:
          items:
            $ref: '#/components/schemas/AccessToken'
          type: array
      type: object
    ListActionsResponse:
      example:
        actions:
        - pipeline: pipeline
          endpoint: endpoint
          lastSeen: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
          labels:
          - resource: true
            name: name
            id: 0
            value: value
          - resource: true
            name: name
            id: 0
            value: value
          usageCmd: usageCmd
        - pipeline: pipeline
          endpoint: endpoint
          lastSeen: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
          labels:
          - resource: true
            name: name
            id: 0
            value: value
          - resource: true
            name: name
            id: 0
            value: value
          usageCmd: usageCmd
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ListActionsResponse.ActionInfo'
          type: array
      type: object
    ListActionsResponse.ActionInfo:
      example:
        pipeline: pipeline
        endpoint: endpoint
        lastSeen: 2000-01-23T04:56:07.000+00:00
        dateCreated: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        labels:
        - resource: true
          name: name
          id: 0
          value: value
        - resource: true
          name: name
          id: 0
          value: value
        usageCmd: usageCmd
      properties:
        id:
          type: string
        name:
          type: string
        pipeline:
          type: string
        source:
          $ref: '#/components/schemas/Action.Source'
        status:
          $ref: '#/components/schemas/Action.Status'
        lastSeen:
          format: date-time
          type: string
        dateCreated:
          format: date-time
          type: string
        event:
          $ref: '#/components/schemas/Action.EventType'
        endpoint:
          type: string
        labels:
          items:
            $ref: '#/components/schemas/LabelDbDto'
          type: array
        usageCmd:
          type: string
      type: object
    ListComputeEnvsResponse:
      example:
        computeEnvs:
        - lastUsed: 2000-01-23T04:56:07.000+00:00
          visibility: visibility
          name: name
          workspaceName: workspaceName
          id: id
          message: message
          platform: platform
          primary: true
        - lastUsed: 2000-01-23T04:56:07.000+00:00
          visibility: visibility
          name: name
          workspaceName: workspaceName
          id: id
          message: message
          platform: platform
          primary: true
      properties:
        computeEnvs:
          items:
            $ref: '#/components/schemas/ListComputeEnvsResponse.Entry'
          type: array
      type: object
    ListComputeEnvsResponse.Entry:
      example:
        lastUsed: 2000-01-23T04:56:07.000+00:00
        visibility: visibility
        name: name
        workspaceName: workspaceName
        id: id
        message: message
        platform: platform
        primary: true
      properties:
        id:
          type: string
        name:
          type: string
        platform:
          type: string
        status:
          $ref: '#/components/schemas/ComputeEnv.Status'
        message:
          type: string
        lastUsed:
          format: date-time
          type: string
        primary:
          type: boolean
        workspaceName:
          type: string
        visibility:
          type: string
      type: object
    ListCredentialsResponse:
      example:
        credentials:
        - lastUsed: 2000-01-23T04:56:07.000+00:00
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          baseUrl: baseUrl
          deleted: true
          dateCreated: 2000-01-23T04:56:07.000+00:00
          provider: aws
          name: name
          description: description
          id: id
          category: category
        - lastUsed: 2000-01-23T04:56:07.000+00:00
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          baseUrl: baseUrl
          deleted: true
          dateCreated: 2000-01-23T04:56:07.000+00:00
          provider: aws
          name: name
          description: description
          id: id
          category: category
      properties:
        credentials:
          items:
            $ref: '#/components/schemas/Credentials'
          type: array
      type: object
    ListDatasetVersionsResponse:
      example:
        versions:
        - lastUpdated: 2000-01-23T04:56:07.000+00:00
          datasetDescription: datasetDescription
          hasHeader: true
          fileName: fileName
          datasetName: datasetName
          datasetId: datasetId
          mediaType: mediaType
          version: 0
          url: url
        - lastUpdated: 2000-01-23T04:56:07.000+00:00
          datasetDescription: datasetDescription
          hasHeader: true
          fileName: fileName
          datasetName: datasetName
          datasetId: datasetId
          mediaType: mediaType
          version: 0
          url: url
      properties:
        versions:
          items:
            $ref: '#/components/schemas/DatasetVersionDbDto'
          type: array
      type: object
    ListDatasetsResponse:
      example:
        datasets:
        - lastUpdated: 2000-01-23T04:56:07.000+00:00
          deleted: true
          dateCreated: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          mediaType: mediaType
          id: id
        - lastUpdated: 2000-01-23T04:56:07.000+00:00
          deleted: true
          dateCreated: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          mediaType: mediaType
          id: id
      properties:
        datasets:
          items:
            $ref: '#/components/schemas/Dataset'
          type: array
      type: object
    ListEventTypesResponse:
      example:
        eventTypes:
        - display: display
          description: description
          source: source
          enabled: true
        - display: display
          description: description
          source: source
          enabled: true
      properties:
        eventTypes:
          items:
            $ref: '#/components/schemas/EventType'
          type: array
      type: object
    ListMembersResponse:
      example:
        totalSize: 0
        members:
        - firstName: firstName
          lastName: lastName
          avatar: avatar
          userName: userName
          email: email
          memberId: 6
        - firstName: firstName
          lastName: lastName
          avatar: avatar
          userName: userName
          email: email
          memberId: 6
      properties:
        totalSize:
          format: int64
          type: integer
        members:
          items:
            $ref: '#/components/schemas/MemberDbDto'
          type: array
      type: object
    ListOrganizationsResponse:
      example:
        totalSize: 1
        organizations:
        - website: website
          name: name
          fullName: fullName
          description: description
          location: location
          orgId: 0
          logoId: logoId
          logoUrl: logoUrl
          memberId: 6
        - website: website
          name: name
          fullName: fullName
          description: description
          location: location
          orgId: 0
          logoId: logoId
          logoUrl: logoUrl
          memberId: 6
      properties:
        organizations:
          items:
            $ref: '#/components/schemas/OrganizationDbDto'
          type: array
        totalSize:
          format: int32
          type: integer
      required:
      - organizations
      type: object
    ListParticipantsResponse:
      example:
        totalSize: 0
        participants:
        - teamName: teamName
          lastName: lastName
          userAvatarUrl: userAvatarUrl
          userName: userName
          participantId: 1
          firstName: firstName
          teamId: 5
          email: email
          teamAvatarUrl: teamAvatarUrl
          memberId: 6
        - teamName: teamName
          lastName: lastName
          userAvatarUrl: userAvatarUrl
          userName: userName
          participantId: 1
          firstName: firstName
          teamId: 5
          email: email
          teamAvatarUrl: teamAvatarUrl
          memberId: 6
      properties:
        totalSize:
          format: int64
          type: integer
        participants:
          items:
            $ref: '#/components/schemas/ParticipantDbDto'
          type: array
      required:
      - participants
      - totalSize
      type: object
    ListPipelineInfoResponse:
      example:
        pipelines:
        - pipelines
        - pipelines
      properties:
        pipelines:
          items:
            type: string
          type: array
      type: object
    ListPipelineSecretsResponse:
      example:
        totalSize: 6
        pipelineSecrets:
        - lastUsed: 2000-01-23T04:56:07.000+00:00
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 0
        - lastUsed: 2000-01-23T04:56:07.000+00:00
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 0
      properties:
        pipelineSecrets:
          items:
            $ref: '#/components/schemas/PipelineSecret'
          type: array
        totalSize:
          format: int64
          type: integer
      type: object
    ListPipelinesResponse:
      example:
        pipelines:
        - orgName: orgName
          visibility: visibility
          optimized: true
          icon: icon
          description: description
          userFirstName: userFirstName
          repository: repository
          userName: userName
          userId: 6
          orgId: 1
          pipelineId: 0
          labels:
          - resource: true
            name: name
            id: 0
            value: value
          - resource: true
            name: name
            id: 0
            value: value
          userLastName: userLastName
          name: name
          workspaceName: workspaceName
          workspaceId: 5
        - orgName: orgName
          visibility: visibility
          optimized: true
          icon: icon
          description: description
          userFirstName: userFirstName
          repository: repository
          userName: userName
          userId: 6
          orgId: 1
          pipelineId: 0
          labels:
          - resource: true
            name: name
            id: 0
            value: value
          - resource: true
            name: name
            id: 0
            value: value
          userLastName: userLastName
          name: name
          workspaceName: workspaceName
          workspaceId: 5
        totalSize: 5
      properties:
        pipelines:
          items:
            $ref: '#/components/schemas/PipelineDbDto'
          type: array
        totalSize:
          format: int64
          type: integer
      type: object
    ListPlatformsResponse:
      example:
        platforms:
        - credentialsProviders:
          - credentialsProviders
          - credentialsProviders
          name: name
          id: id
        - credentialsProviders:
          - credentialsProviders
          - credentialsProviders
          name: name
          id: id
      properties:
        platforms:
          items:
            $ref: '#/components/schemas/ComputePlatform'
          type: array
      type: object
    ListRegionsResponse:
      example:
        regions:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        regions:
          items:
            $ref: '#/components/schemas/ComputeRegion'
          type: array
      type: object
    ListTasksResponse:
      example:
        total: 0
        tasks:
        - task:
            container: container
            pcpu: 2.027123023002322
            syscw: 4
            attempt: 0
            lastUpdated: 2000-01-23T04:56:07.000+00:00
            executor: executor
            tag: tag
            id: 8
            cloudZone: cloudZone
            realtime: 3
            module:
            - module
            - module
            vmem: 1
            scratch: scratch
            script: script
            exit: exit
            disk: 5
            writeBytes: 9
            workdir: workdir
            name: name
            volCtxt: 9
            rchar: 6
            hash: hash
            memory: 1
            submit: 2000-01-23T04:56:07.000+00:00
            duration: 9
            pmem: 4.145608029883936
            rss: 7
            dateCreated: 2000-01-23T04:56:07.000+00:00
            machineType: machineType
            exitStatus: 7
            process: process
            cost: 2.3021358869347655
            cpus: 6
            start: 2000-01-23T04:56:07.000+00:00
            env: env
            peakRss: 1
            syscr: 1
            peakVmem: 1
            wchar: 7
            readBytes: 5
            time: 5
            errorAction: errorAction
            complete: 2000-01-23T04:56:07.000+00:00
            nativeId: nativeId
            invCtxt: 6
            queue: queue
            taskId: 9
        - task:
            container: container
            pcpu: 2.027123023002322
            syscw: 4
            attempt: 0
            lastUpdated: 2000-01-23T04:56:07.000+00:00
            executor: executor
            tag: tag
            id: 8
            cloudZone: cloudZone
            realtime: 3
            module:
            - module
            - module
            vmem: 1
            scratch: scratch
            script: script
            exit: exit
            disk: 5
            writeBytes: 9
            workdir: workdir
            name: name
            volCtxt: 9
            rchar: 6
            hash: hash
            memory: 1
            submit: 2000-01-23T04:56:07.000+00:00
            duration: 9
            pmem: 4.145608029883936
            rss: 7
            dateCreated: 2000-01-23T04:56:07.000+00:00
            machineType: machineType
            exitStatus: 7
            process: process
            cost: 2.3021358869347655
            cpus: 6
            start: 2000-01-23T04:56:07.000+00:00
            env: env
            peakRss: 1
            syscr: 1
            peakVmem: 1
            wchar: 7
            readBytes: 5
            time: 5
            errorAction: errorAction
            complete: 2000-01-23T04:56:07.000+00:00
            nativeId: nativeId
            invCtxt: 6
            queue: queue
            taskId: 9
      properties:
        tasks:
          items:
            $ref: '#/components/schemas/DescribeTaskResponse'
          type: array
        total:
          format: int64
          type: integer
      type: object
    ListTeamResponse:
      example:
        teams:
        - membersCount: 6
          avatarUrl: avatarUrl
          teamId: 0
          name: name
          description: description
        - membersCount: 6
          avatarUrl: avatarUrl
          teamId: 0
          name: name
          description: description
      properties:
        teams:
          items:
            $ref: '#/components/schemas/TeamDbDto'
          type: array
      type: object
    ListWorkflowsResponse:
      example:
        workflows:
        - starred: true
          workflow:
            configText: configText
            container: container
            submit: 2000-01-23T04:56:07.000+00:00
            ownerId: 0
            repository: repository
            homeDir: homeDir
            nextflow:
              build: build
              version: version
              timestamp: 2000-01-23T04:56:07.000+00:00
            duration: 6
            lastUpdated: 2000-01-23T04:56:07.000+00:00
            dateCreated: 2000-01-23T04:56:07.000+00:00
            stats:
              ignoredCount: 5
              failedCountFmt: failedCountFmt
              succeedPct: 9.301444
              succeedCount: 5
              cachedCountFmt: cachedCountFmt
              succeedCountFmt: succeedCountFmt
              failedPct: 7.0614014
              ignoredPct: 3.6160767
              succeedDuration: 7
              cachedDuration: 2
              failedCount: 1
              ignoredCountFmt: ignoredCountFmt
              cachedPct: 2.302136
              cachedCount: 6
              computeTimeFmt: computeTimeFmt
              failedDuration: 4
            runName: runName
            launchDir: launchDir
            id: id
            workDir: workDir
            errorReport: errorReport
            exitStatus: 1
            projectDir: projectDir
            resume: true
            manifest:
              mainScript: mainScript
              nextflowVersion: nextflowVersion
              author: author
              defaultBranch: defaultBranch
              name: name
              description: description
              gitmodules: gitmodules
              version: version
              homePage: homePage
            profile: profile
            start: 2000-01-23T04:56:07.000+00:00
            errorMessage: errorMessage
            sessionId: sessionId
            commitId: commitId
            params:
              key: true
            userName: userName
            scriptFile: scriptFile
            revision: revision
            launchId: launchId
            scriptId: scriptId
            configFiles:
            - configFiles
            - configFiles
            deleted: true
            success: true
            scriptName: scriptName
            containerEngine: containerEngine
            commandLine: commandLine
            complete: 2000-01-23T04:56:07.000+00:00
            projectName: projectName
          optimized: true
          progress:
            processesProgress:
            - pending: 6
              peakTasks: 3
              running: 2
              lastUpdated: 2000-01-23T04:56:07.000+00:00
              cpuLoad: 0
              dateCreated: 2000-01-23T04:56:07.000+00:00
              cpuTime: 7
              peakMemory: 4
              cached: 5
              loadMemory: 7
              process: process
              cpus: 3
              loadTasks: 3
              peakCpus: 5
              failed: 6
              loadCpus: 3
              volCtxSwitch: 8
              submitted: 1
              writeBytes: 4
              invCtxSwitch: 7
              memoryReq: 6
              memoryEfficiency: 6.704019
              cpuEfficiency: 3.3531933
              memoryRss: 7
              readBytes: 0
              succeeded: 6
            - pending: 6
              peakTasks: 3
              running: 2
              lastUpdated: 2000-01-23T04:56:07.000+00:00
              cpuLoad: 0
              dateCreated: 2000-01-23T04:56:07.000+00:00
              cpuTime: 7
              peakMemory: 4
              cached: 5
              loadMemory: 7
              process: process
              cpus: 3
              loadTasks: 3
              peakCpus: 5
              failed: 6
              loadCpus: 3
              volCtxSwitch: 8
              submitted: 1
              writeBytes: 4
              invCtxSwitch: 7
              memoryReq: 6
              memoryEfficiency: 6.704019
              cpuEfficiency: 3.3531933
              memoryRss: 7
              readBytes: 0
              succeeded: 6
            workflowProgress:
              pending: 5
              peakTasks: 6
              running: 2
              lastUpdated: 2000-01-23T04:56:07.000+00:00
              cpuLoad: 1
              dateCreated: 2000-01-23T04:56:07.000+00:00
              cpuTime: 1
              peakMemory: 3
              cached: 3
              loadMemory: 8
              cost: 9.965781217890562
              cpus: 7
              loadTasks: 9
              peakCpus: 9
              failed: 9
              loadCpus: 6
              volCtxSwitch: 4
              submitted: 5
              writeBytes: 1
              invCtxSwitch: 5
              memoryReq: 6
              memoryEfficiency: 2.027123
              cpuEfficiency: 4.145608
              memoryRss: 1
              readBytes: 7
              executors:
              - executors
              - executors
              succeeded: 7
          labels:
          - resource: true
            name: name
            id: 0
            value: value
          - resource: true
            name: name
            id: 0
            value: value
        - starred: true
          workflow:
            configText: configText
            container: container
            submit: 2000-01-23T04:56:07.000+00:00
            ownerId: 0
            repository: repository
            homeDir: homeDir
            nextflow:
              build: build
              version: version
              timestamp: 2000-01-23T04:56:07.000+00:00
            duration: 6
            lastUpdated: 2000-01-23T04:56:07.000+00:00
            dateCreated: 2000-01-23T04:56:07.000+00:00
            stats:
              ignoredCount: 5
              failedCountFmt: failedCountFmt
              succeedPct: 9.301444
              succeedCount: 5
              cachedCountFmt: cachedCountFmt
              succeedCountFmt: succeedCountFmt
              failedPct: 7.0614014
              ignoredPct: 3.6160767
              succeedDuration: 7
              cachedDuration: 2
              failedCount: 1
              ignoredCountFmt: ignoredCountFmt
              cachedPct: 2.302136
              cachedCount: 6
              computeTimeFmt: computeTimeFmt
              failedDuration: 4
            runName: runName
            launchDir: launchDir
            id: id
            workDir: workDir
            errorReport: errorReport
            exitStatus: 1
            projectDir: projectDir
            resume: true
            manifest:
              mainScript: mainScript
              nextflowVersion: nextflowVersion
              author: author
              defaultBranch: defaultBranch
              name: name
              description: description
              gitmodules: gitmodules
              version: version
              homePage: homePage
            profile: profile
            start: 2000-01-23T04:56:07.000+00:00
            errorMessage: errorMessage
            sessionId: sessionId
            commitId: commitId
            params:
              key: true
            userName: userName
            scriptFile: scriptFile
            revision: revision
            launchId: launchId
            scriptId: scriptId
            configFiles:
            - configFiles
            - configFiles
            deleted: true
            success: true
            scriptName: scriptName
            containerEngine: containerEngine
            commandLine: commandLine
            complete: 2000-01-23T04:56:07.000+00:00
            projectName: projectName
          optimized: true
          progress:
            processesProgress:
            - pending: 6
              peakTasks: 3
              running: 2
              lastUpdated: 2000-01-23T04:56:07.000+00:00
              cpuLoad: 0
              dateCreated: 2000-01-23T04:56:07.000+00:00
              cpuTime: 7
              peakMemory: 4
              cached: 5
              loadMemory: 7
              process: process
              cpus: 3
              loadTasks: 3
              peakCpus: 5
              failed: 6
              loadCpus: 3
              volCtxSwitch: 8
              submitted: 1
              writeBytes: 4
              invCtxSwitch: 7
              memoryReq: 6
              memoryEfficiency: 6.704019
              cpuEfficiency: 3.3531933
              memoryRss: 7
              readBytes: 0
              succeeded: 6
            - pending: 6
              peakTasks: 3
              running: 2
              lastUpdated: 2000-01-23T04:56:07.000+00:00
              cpuLoad: 0
              dateCreated: 2000-01-23T04:56:07.000+00:00
              cpuTime: 7
              peakMemory: 4
              cached: 5
              loadMemory: 7
              process: process
              cpus: 3
              loadTasks: 3
              peakCpus: 5
              failed: 6
              loadCpus: 3
              volCtxSwitch: 8
              submitted: 1
              writeBytes: 4
              invCtxSwitch: 7
              memoryReq: 6
              memoryEfficiency: 6.704019
              cpuEfficiency: 3.3531933
              memoryRss: 7
              readBytes: 0
              succeeded: 6
            workflowProgress:
              pending: 5
              peakTasks: 6
              running: 2
              lastUpdated: 2000-01-23T04:56:07.000+00:00
              cpuLoad: 1
              dateCreated: 2000-01-23T04:56:07.000+00:00
              cpuTime: 1
              peakMemory: 3
              cached: 3
              loadMemory: 8
              cost: 9.965781217890562
              cpus: 7
              loadTasks: 9
              peakCpus: 9
              failed: 9
              loadCpus: 6
              volCtxSwitch: 4
              submitted: 5
              writeBytes: 1
              invCtxSwitch: 5
              memoryReq: 6
              memoryEfficiency: 2.027123
              cpuEfficiency: 4.145608
              memoryRss: 1
              readBytes: 7
              executors:
              - executors
              - executors
              succeeded: 7
          labels:
          - resource: true
            name: name
            id: 0
            value: value
          - resource: true
            name: name
            id: 0
            value: value
      properties:
        workflows:
          items:
            $ref: '#/components/schemas/ListWorkflowsResponse.ListWorkflowsElement'
          type: array
      type: object
    ListWorkflowsResponse.ListWorkflowsElement:
      example:
        starred: true
        workflow:
          configText: configText
          container: container
          submit: 2000-01-23T04:56:07.000+00:00
          ownerId: 0
          repository: repository
          homeDir: homeDir
          nextflow:
            build: build
            version: version
            timestamp: 2000-01-23T04:56:07.000+00:00
          duration: 6
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          stats:
            ignoredCount: 5
            failedCountFmt: failedCountFmt
            succeedPct: 9.301444
            succeedCount: 5
            cachedCountFmt: cachedCountFmt
            succeedCountFmt: succeedCountFmt
            failedPct: 7.0614014
            ignoredPct: 3.6160767
            succeedDuration: 7
            cachedDuration: 2
            failedCount: 1
            ignoredCountFmt: ignoredCountFmt
            cachedPct: 2.302136
            cachedCount: 6
            computeTimeFmt: computeTimeFmt
            failedDuration: 4
          runName: runName
          launchDir: launchDir
          id: id
          workDir: workDir
          errorReport: errorReport
          exitStatus: 1
          projectDir: projectDir
          resume: true
          manifest:
            mainScript: mainScript
            nextflowVersion: nextflowVersion
            author: author
            defaultBranch: defaultBranch
            name: name
            description: description
            gitmodules: gitmodules
            version: version
            homePage: homePage
          profile: profile
          start: 2000-01-23T04:56:07.000+00:00
          errorMessage: errorMessage
          sessionId: sessionId
          commitId: commitId
          params:
            key: true
          userName: userName
          scriptFile: scriptFile
          revision: revision
          launchId: launchId
          scriptId: scriptId
          configFiles:
          - configFiles
          - configFiles
          deleted: true
          success: true
          scriptName: scriptName
          containerEngine: containerEngine
          commandLine: commandLine
          complete: 2000-01-23T04:56:07.000+00:00
          projectName: projectName
        optimized: true
        progress:
          processesProgress:
          - pending: 6
            peakTasks: 3
            running: 2
            lastUpdated: 2000-01-23T04:56:07.000+00:00
            cpuLoad: 0
            dateCreated: 2000-01-23T04:56:07.000+00:00
            cpuTime: 7
            peakMemory: 4
            cached: 5
            loadMemory: 7
            process: process
            cpus: 3
            loadTasks: 3
            peakCpus: 5
            failed: 6
            loadCpus: 3
            volCtxSwitch: 8
            submitted: 1
            writeBytes: 4
            invCtxSwitch: 7
            memoryReq: 6
            memoryEfficiency: 6.704019
            cpuEfficiency: 3.3531933
            memoryRss: 7
            readBytes: 0
            succeeded: 6
          - pending: 6
            peakTasks: 3
            running: 2
            lastUpdated: 2000-01-23T04:56:07.000+00:00
            cpuLoad: 0
            dateCreated: 2000-01-23T04:56:07.000+00:00
            cpuTime: 7
            peakMemory: 4
            cached: 5
            loadMemory: 7
            process: process
            cpus: 3
            loadTasks: 3
            peakCpus: 5
            failed: 6
            loadCpus: 3
            volCtxSwitch: 8
            submitted: 1
            writeBytes: 4
            invCtxSwitch: 7
            memoryReq: 6
            memoryEfficiency: 6.704019
            cpuEfficiency: 3.3531933
            memoryRss: 7
            readBytes: 0
            succeeded: 6
          workflowProgress:
            pending: 5
            peakTasks: 6
            running: 2
            lastUpdated: 2000-01-23T04:56:07.000+00:00
            cpuLoad: 1
            dateCreated: 2000-01-23T04:56:07.000+00:00
            cpuTime: 1
            peakMemory: 3
            cached: 3
            loadMemory: 8
            cost: 9.965781217890562
            cpus: 7
            loadTasks: 9
            peakCpus: 9
            failed: 9
            loadCpus: 6
            volCtxSwitch: 4
            submitted: 5
            writeBytes: 1
            invCtxSwitch: 5
            memoryReq: 6
            memoryEfficiency: 2.027123
            cpuEfficiency: 4.145608
            memoryRss: 1
            readBytes: 7
            executors:
            - executors
            - executors
            succeeded: 7
        labels:
        - resource: true
          name: name
          id: 0
          value: value
        - resource: true
          name: name
          id: 0
          value: value
      properties:
        labels:
          items:
            $ref: '#/components/schemas/LabelDbDto'
          type: array
        optimized:
          type: boolean
        starred:
          type: boolean
        workflow:
          $ref: '#/components/schemas/WorkflowDbDto'
        progress:
          $ref: '#/components/schemas/ProgressData'
      type: object
    ListWorkspacesAndOrgResponse:
      example:
        orgsAndWorkspaces:
        - orgName: orgName
          workspaceName: workspaceName
          orgLogoUrl: orgLogoUrl
          orgId: 0
          workspaceId: 6
        - orgName: orgName
          workspaceName: workspaceName
          orgLogoUrl: orgLogoUrl
          orgId: 0
          workspaceId: 6
      properties:
        orgsAndWorkspaces:
          items:
            $ref: '#/components/schemas/OrgAndWorkspaceDbDto'
          type: array
      type: object
    ListWorkspacesResponse:
      example:
        workspaces:
        - name: name
          fullName: fullName
          description: description
          id: 0
        - name: name
          fullName: fullName
          description: description
          id: 0
      properties:
        workspaces:
          items:
            $ref: '#/components/schemas/WorkspaceDbDto'
          type: array
      type: object
    Log:
      example:
        start_time: start_time
        stdout: stdout
        name: name
        end_time: end_time
        exit_code: 0
        cmd:
        - cmd
        - cmd
        stderr: stderr
      properties:
        name:
          type: string
        cmd:
          items:
            type: string
          type: array
        start_time:
          type: string
        end_time:
          type: string
        stdout:
          type: string
        stderr:
          type: string
        exit_code:
          format: int32
          type: integer
      type: object
    LogPage:
      example:
        entries: '{}'
        forwardToken: forwardToken
        downloads:
        - displayText: displayText
          fileName: fileName
          saveName: saveName
        - displayText: displayText
          fileName: fileName
          saveName: saveName
        pending: true
        truncated: true
        rewindToken: rewindToken
        message: message
      properties:
        entries:
          type: object
        rewindToken:
          type: string
        forwardToken:
          type: string
        pending:
          type: boolean
        message:
          type: string
        downloads:
          items:
            $ref: '#/components/schemas/LogPage.Download'
          type: array
        truncated:
          type: boolean
      type: object
    LogPage.Download:
      example:
        displayText: displayText
        fileName: fileName
        saveName: saveName
      properties:
        fileName:
          type: string
        displayText:
          type: string
        saveName:
          type: string
      type: object
    LsfComputeConfig:
      allOf:
      - $ref: '#/components/schemas/AbstractGridConfig'
      - $ref: '#/components/schemas/LsfComputeConfig_allOf'
      title: IBM LSF configuration
    MemberDbDto:
      example:
        firstName: firstName
        lastName: lastName
        avatar: avatar
        userName: userName
        email: email
        memberId: 6
      properties:
        memberId:
          format: int64
          type: integer
        email:
          type: string
        userName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        avatar:
          type: string
        role:
          $ref: '#/components/schemas/OrgRole'
      type: object
    MoabComputeConfig:
      allOf:
      - $ref: '#/components/schemas/AbstractGridConfig'
      - $ref: '#/components/schemas/AltairPbsComputeConfig_allOf'
      title: Moab configuration
    MultiRequestFileSchema:
      properties:
        file:
          format: binary
          type: string
      type: object
    NavbarConfig:
      example:
        menus:
        - label: label
          url: url
        - label: label
          url: url
      properties:
        menus:
          items:
            $ref: '#/components/schemas/NavbarConfig.NavbarMenu'
          type: array
      type: object
    NavbarConfig.NavbarMenu:
      example:
        label: label
        url: url
      properties:
        label:
          type: string
        url:
          type: string
      type: object
    Object:
      type: object
    OrgAndWorkspaceDbDto:
      example:
        orgName: orgName
        workspaceName: workspaceName
        orgLogoUrl: orgLogoUrl
        orgId: 0
        workspaceId: 6
      properties:
        orgId:
          format: int64
          type: integer
        orgName:
          type: string
        orgLogoUrl:
          type: string
        workspaceId:
          format: int64
          type: integer
        workspaceName:
          type: string
      type: object
    OrgRole:
      enum:
      - owner
      - member
      - collaborator
      type: string
    Organization:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        website: website
        dateCreated: 2000-01-23T04:56:07.000+00:00
        name: name
        fullName: fullName
        description: description
        location: location
        id: 0
      properties:
        id:
          format: int64
          nullable: true
          readOnly: true
          type: integer
        name:
          maxLength: 40
          pattern: ^[a-zA-Z\d](?:[a-zA-Z\d]|[-_](?=[a-zA-Z\d])){1,38}$
          type: string
        fullName:
          maxLength: 100
          type: string
        description:
          maxLength: 1000
          type: string
        location:
          maxLength: 100
          type: string
        website:
          type: string
        dateCreated:
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
      required:
      - fullName
      - name
      type: object
    OrganizationDbDto:
      example:
        website: website
        name: name
        fullName: fullName
        description: description
        location: location
        orgId: 0
        logoId: logoId
        logoUrl: logoUrl
        memberId: 6
      properties:
        orgId:
          format: int64
          type: integer
        name:
          type: string
        fullName:
          type: string
        description:
          type: string
        location:
          type: string
        website:
          type: string
        logoId:
          type: string
        logoUrl:
          type: string
        memberId:
          format: int64
          type: integer
        memberRole:
          $ref: '#/components/schemas/OrgRole'
      type: object
    ParticipantDbDto:
      example:
        teamName: teamName
        lastName: lastName
        userAvatarUrl: userAvatarUrl
        userName: userName
        participantId: 1
        firstName: firstName
        teamId: 5
        email: email
        teamAvatarUrl: teamAvatarUrl
        memberId: 6
      properties:
        memberId:
          format: int64
          type: integer
        email:
          type: string
        userName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        participantId:
          format: int64
          type: integer
        orgRole:
          $ref: '#/components/schemas/OrgRole'
        teamId:
          format: int64
          type: integer
        teamName:
          type: string
        wspRole:
          $ref: '#/components/schemas/WspRole'
        teamAvatarUrl:
          type: string
        userAvatarUrl:
          type: string
        type:
          $ref: '#/components/schemas/ParticipantType'
      required:
      - email
      - firstName
      - lastName
      - memberId
      - orgRole
      - participantId
      - teamId
      - teamName
      - userAvatarUrl
      - userName
      - wspRole
      type: object
    ParticipantType:
      enum:
      - MEMBER
      - TEAM
      - COLLABORATOR
      type: string
    PipelineDbDto:
      example:
        orgName: orgName
        visibility: visibility
        optimized: true
        icon: icon
        description: description
        userFirstName: userFirstName
        repository: repository
        userName: userName
        userId: 6
        orgId: 1
        pipelineId: 0
        labels:
        - resource: true
          name: name
          id: 0
          value: value
        - resource: true
          name: name
          id: 0
          value: value
        userLastName: userLastName
        name: name
        workspaceName: workspaceName
        workspaceId: 5
      properties:
        pipelineId:
          format: int64
          type: integer
        name:
          type: string
        description:
          type: string
        icon:
          type: string
        repository:
          type: string
        userId:
          format: int64
          type: integer
        userName:
          type: string
        userFirstName:
          type: string
        userLastName:
          type: string
        orgId:
          format: int64
          type: integer
        orgName:
          type: string
        workspaceId:
          format: int64
          type: integer
        workspaceName:
          type: string
        visibility:
          type: string
        optimized:
          type: boolean
        labels:
          items:
            $ref: '#/components/schemas/LabelDbDto'
          type: array
      type: object
    PipelineInfo:
      example:
        configFiles:
        - configFiles
        - configFiles
        simpleName: simpleName
        provider: provider
        manifest:
          mainScript: mainScript
          nextflowVersion: nextflowVersion
          author: author
          defaultBranch: defaultBranch
          name: name
          description: description
          gitmodules: gitmodules
          version: version
          homePage: homePage
        warnings:
        - warnings
        - warnings
        profiles:
        - profiles
        - profiles
        revisions:
        - revisions
        - revisions
        workDirs:
        - workDirs
        - workDirs
        projectName: projectName
        cloneUrl: cloneUrl
        repositoryUrl: repositoryUrl
      properties:
        projectName:
          type: string
        simpleName:
          type: string
        repositoryUrl:
          type: string
        cloneUrl:
          type: string
        provider:
          type: string
        configFiles:
          items:
            type: string
          type: array
        workDirs:
          items:
            type: string
          type: array
        revisions:
          items:
            type: string
          type: array
        profiles:
          items:
            type: string
          type: array
        manifest:
          $ref: '#/components/schemas/WfManifest'
        warnings:
          items:
            type: string
          type: array
      type: object
    PipelineQueryAttribute:
      enum:
      - optimized
      - labels
      type: string
    PipelineSchemaAttributes:
      enum:
      - schema
      - params
      type: string
    PipelineSchemaResponse:
      example:
        schema: schema
        params: params
      properties:
        schema:
          type: string
        params:
          type: string
      required:
      - schema
      type: object
    PipelineSecret:
      example:
        lastUsed: 2000-01-23T04:56:07.000+00:00
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        dateCreated: 2000-01-23T04:56:07.000+00:00
        name: name
        id: 0
      properties:
        id:
          format: int64
          nullable: true
          type: integer
        name:
          maxLength: 100
          pattern: ^[a-zA-Z_](?:[0-9A-Za-z]+|(_)(?!\1)){1,49}$
          type: string
        lastUsed:
          format: date-time
          readOnly: true
          type: string
        dateCreated:
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
      required:
      - name
      type: object
    PlatformMetainfo:
      oneOf:
      - $ref: '#/components/schemas/AwsBatchPlatformMetainfo'
      - $ref: '#/components/schemas/GooglePlatformMetainfo'
      type: object
    PodCleanupPolicy:
      enum:
      - on_success
      - always
      - never
      type: string
    ProcessLoad:
      example:
        pending: 6
        peakTasks: 3
        running: 2
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        cpuLoad: 0
        dateCreated: 2000-01-23T04:56:07.000+00:00
        cpuTime: 7
        peakMemory: 4
        cached: 5
        loadMemory: 7
        process: process
        cpus: 3
        loadTasks: 3
        peakCpus: 5
        failed: 6
        loadCpus: 3
        volCtxSwitch: 8
        submitted: 1
        writeBytes: 4
        invCtxSwitch: 7
        memoryReq: 6
        memoryEfficiency: 6.704019
        cpuEfficiency: 3.3531933
        memoryRss: 7
        readBytes: 0
        succeeded: 6
      properties:
        pending:
          format: int64
          type: integer
        submitted:
          format: int64
          type: integer
        running:
          format: int64
          type: integer
        succeeded:
          format: int64
          type: integer
        failed:
          format: int64
          type: integer
        cached:
          format: int64
          type: integer
        memoryEfficiency:
          format: float
          type: number
        cpuEfficiency:
          format: float
          type: number
        process:
          type: string
        cpus:
          deprecated: true
          format: int64
          type: integer
        cpuTime:
          deprecated: true
          format: int64
          type: integer
        cpuLoad:
          deprecated: true
          format: int64
          type: integer
        memoryRss:
          deprecated: true
          format: int64
          type: integer
        memoryReq:
          deprecated: true
          format: int64
          type: integer
        readBytes:
          deprecated: true
          format: int64
          type: integer
        writeBytes:
          deprecated: true
          format: int64
          type: integer
        volCtxSwitch:
          deprecated: true
          format: int64
          type: integer
        invCtxSwitch:
          deprecated: true
          format: int64
          type: integer
        loadTasks:
          deprecated: true
          format: int64
          type: integer
        loadCpus:
          format: int64
          type: integer
        loadMemory:
          format: int64
          type: integer
        peakCpus:
          format: int64
          type: integer
        peakTasks:
          format: int64
          type: integer
        peakMemory:
          format: int64
          type: integer
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
      required:
      - cached
      - cpuLoad
      - cpuTime
      - cpus
      - failed
      - invCtxSwitch
      - loadCpus
      - loadMemory
      - loadTasks
      - memoryReq
      - memoryRss
      - peakCpus
      - peakMemory
      - peakTasks
      - pending
      - process
      - readBytes
      - running
      - submitted
      - succeeded
      - volCtxSwitch
      - writeBytes
      type: object
    ProgressData:
      example:
        processesProgress:
        - pending: 6
          peakTasks: 3
          running: 2
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          cpuLoad: 0
          dateCreated: 2000-01-23T04:56:07.000+00:00
          cpuTime: 7
          peakMemory: 4
          cached: 5
          loadMemory: 7
          process: process
          cpus: 3
          loadTasks: 3
          peakCpus: 5
          failed: 6
          loadCpus: 3
          volCtxSwitch: 8
          submitted: 1
          writeBytes: 4
          invCtxSwitch: 7
          memoryReq: 6
          memoryEfficiency: 6.704019
          cpuEfficiency: 3.3531933
          memoryRss: 7
          readBytes: 0
          succeeded: 6
        - pending: 6
          peakTasks: 3
          running: 2
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          cpuLoad: 0
          dateCreated: 2000-01-23T04:56:07.000+00:00
          cpuTime: 7
          peakMemory: 4
          cached: 5
          loadMemory: 7
          process: process
          cpus: 3
          loadTasks: 3
          peakCpus: 5
          failed: 6
          loadCpus: 3
          volCtxSwitch: 8
          submitted: 1
          writeBytes: 4
          invCtxSwitch: 7
          memoryReq: 6
          memoryEfficiency: 6.704019
          cpuEfficiency: 3.3531933
          memoryRss: 7
          readBytes: 0
          succeeded: 6
        workflowProgress:
          pending: 5
          peakTasks: 6
          running: 2
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          cpuLoad: 1
          dateCreated: 2000-01-23T04:56:07.000+00:00
          cpuTime: 1
          peakMemory: 3
          cached: 3
          loadMemory: 8
          cost: 9.965781217890562
          cpus: 7
          loadTasks: 9
          peakCpus: 9
          failed: 9
          loadCpus: 6
          volCtxSwitch: 4
          submitted: 5
          writeBytes: 1
          invCtxSwitch: 5
          memoryReq: 6
          memoryEfficiency: 2.027123
          cpuEfficiency: 4.145608
          memoryRss: 1
          readBytes: 7
          executors:
          - executors
          - executors
          succeeded: 7
      properties:
        workflowProgress:
          $ref: '#/components/schemas/WorkflowLoad'
        processesProgress:
          items:
            $ref: '#/components/schemas/ProcessLoad'
          type: array
      type: object
    RandomWorkflowNameResponse:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    ResourceData:
      example:
        q1: 5.962134
        q2: 5.637377
        q3Label: q3Label
        q3: 2.302136
        minLabel: minLabel
        min: 1.4658129
        max: 7.0614014
        mean: 6.0274563
        warnings:
        - warnings
        - warnings
        q2Label: q2Label
        maxLabel: maxLabel
        q1Label: q1Label
      properties:
        warnings:
          items:
            type: string
          type: array
        mean:
          format: float
          type: number
        min:
          format: float
          type: number
        q1:
          format: float
          type: number
        q2:
          format: float
          type: number
        q3:
          format: float
          type: number
        max:
          format: float
          type: number
        minLabel:
          type: string
        maxLabel:
          type: string
        q1Label:
          type: string
        q2Label:
          type: string
        q3Label:
          type: string
      type: object
    RunId:
      example:
        run_id: run_id
      properties:
        run_id:
          type: string
      type: object
    RunListResponse:
      example:
        next_page_token: next_page_token
        runs:
        - run_id: run_id
        - run_id: run_id
      properties:
        runs:
          items:
            $ref: '#/components/schemas/RunStatus'
          type: array
        next_page_token:
          type: string
      type: object
    RunLog:
      example:
        outputs: '{}'
        request:
          workflow_engine_parameters:
            key: workflow_engine_parameters
          workflow_url: workflow_url
          workflow_params: '{}'
          workflow_type: workflow_type
          workflow_type_version: workflow_type_version
          tags:
            key: tags
        run_id: run_id
        run_log:
          start_time: start_time
          stdout: stdout
          name: name
          end_time: end_time
          exit_code: 0
          cmd:
          - cmd
          - cmd
          stderr: stderr
        task_logs:
        - start_time: start_time
          stdout: stdout
          name: name
          end_time: end_time
          exit_code: 0
          cmd:
          - cmd
          - cmd
          stderr: stderr
        - start_time: start_time
          stdout: stdout
          name: name
          end_time: end_time
          exit_code: 0
          cmd:
          - cmd
          - cmd
          stderr: stderr
      properties:
        run_id:
          type: string
        request:
          $ref: '#/components/schemas/RunRequest'
        state:
          $ref: '#/components/schemas/State'
        run_log:
          $ref: '#/components/schemas/Log'
        task_logs:
          items:
            $ref: '#/components/schemas/Log'
          type: array
        outputs:
          type: object
      type: object
    RunRequest:
      example:
        workflow_engine_parameters:
          key: workflow_engine_parameters
        workflow_url: workflow_url
        workflow_params: '{}'
        workflow_type: workflow_type
        workflow_type_version: workflow_type_version
        tags:
          key: tags
      properties:
        workflow_params:
          type: object
        workflow_type:
          type: string
        workflow_type_version:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
        workflow_engine_parameters:
          additionalProperties:
            type: string
          type: object
        workflow_url:
          type: string
      type: object
    RunStatus:
      example:
        run_id: run_id
      properties:
        run_id:
          type: string
        state:
          $ref: '#/components/schemas/State'
      type: object
    SSHSecurityKeys:
      properties:
        privateKey:
          type: string
          writeOnly: true
        passphrase:
          type: string
          writeOnly: true
        discriminator:
          readOnly: true
          type: string
      type: object
    SecurityKeys:
      discriminator:
        mapping:
          github: '#/components/schemas/GitHubSecurityKeys'
          container-reg: '#/components/schemas/ContainerRegistryKeys'
          tw-agent: '#/components/schemas/AgentSecurityKeys'
          k8s: '#/components/schemas/K8sSecurityKeys'
          codecommit: '#/components/schemas/CodeCommitSecurityKeys'
          ssh: '#/components/schemas/SSHSecurityKeys'
          google: '#/components/schemas/GoogleSecurityKeys'
          gitlab: '#/components/schemas/GitLabSecurityKeys'
          aws: '#/components/schemas/AwsSecurityKeys'
          bitbucket: '#/components/schemas/BitBucketSecurityKeys'
          azure: '#/components/schemas/AzureSecurityKeys'
        propertyName: discriminator
      oneOf:
      - $ref: '#/components/schemas/AwsSecurityKeys'
      - $ref: '#/components/schemas/GoogleSecurityKeys'
      - $ref: '#/components/schemas/GitHubSecurityKeys'
      - $ref: '#/components/schemas/GitLabSecurityKeys'
      - $ref: '#/components/schemas/BitBucketSecurityKeys'
      - $ref: '#/components/schemas/SSHSecurityKeys'
      - $ref: '#/components/schemas/K8sSecurityKeys'
      - $ref: '#/components/schemas/AzureSecurityKeys'
      - $ref: '#/components/schemas/ContainerRegistryKeys'
      - $ref: '#/components/schemas/AgentSecurityKeys'
      - $ref: '#/components/schemas/CodeCommitSecurityKeys'
      type: object
    ServiceInfo:
      example:
        heartbeatInterval: 0
        userWorkspaceEnabled: true
        allowInstanceCredentials: true
        contentMaxFileSize: 1
        waveEnabled: true
        allowLocalRepos: true
        commitId: commitId
        authTypes:
        - authTypes
        - authTypes
        version: version
        loginPath: loginPath
        analytics:
          siteId: 6
          url: url
        termsOfUseUrl: termsOfUseUrl
        contentUrl: contentUrl
        apiVersion: apiVersion
        navbar:
          menus:
          - label: label
            url: url
          - label: label
            url: url
        waveAllowedWorkspaces:
        - 5
        - 5
        landingUrl: landingUrl
      properties:
        version:
          type: string
        apiVersion:
          type: string
        commitId:
          type: string
        authTypes:
          items:
            type: string
          type: array
        loginPath:
          type: string
        navbar:
          $ref: '#/components/schemas/NavbarConfig'
        heartbeatInterval:
          format: int32
          type: integer
        userWorkspaceEnabled:
          type: boolean
        allowInstanceCredentials:
          type: boolean
        landingUrl:
          type: string
        termsOfUseUrl:
          type: string
        contentUrl:
          type: string
        analytics:
          $ref: '#/components/schemas/Analytics'
        allowLocalRepos:
          deprecated: true
          type: boolean
        contentMaxFileSize:
          format: int64
          type: integer
        waveEnabled:
          type: boolean
        waveAllowedWorkspaces:
          items:
            format: int64
            type: integer
          type: array
      type: object
    ServiceInfoResponse:
      example:
        serviceInfo:
          heartbeatInterval: 0
          userWorkspaceEnabled: true
          allowInstanceCredentials: true
          contentMaxFileSize: 1
          waveEnabled: true
          allowLocalRepos: true
          commitId: commitId
          authTypes:
          - authTypes
          - authTypes
          version: version
          loginPath: loginPath
          analytics:
            siteId: 6
            url: url
          termsOfUseUrl: termsOfUseUrl
          contentUrl: contentUrl
          apiVersion: apiVersion
          navbar:
            menus:
            - label: label
              url: url
            - label: label
              url: url
          waveAllowedWorkspaces:
          - 5
          - 5
          landingUrl: landingUrl
      properties:
        serviceInfo:
          $ref: '#/components/schemas/ServiceInfo'
      type: object
    SlurmComputeConfig:
      allOf:
      - $ref: '#/components/schemas/AbstractGridConfig'
      - $ref: '#/components/schemas/AltairPbsComputeConfig_allOf'
      title: Slurm configuration
    State:
      enum:
      - UNKNOWN
      - QUEUED
      - INITIALIZING
      - RUNNING
      - PAUSED
      - COMPLETE
      - EXECUTOR_ERROR
      - SYSTEM_ERROR
      - CANCELED
      - CANCELING
      type: string
    SubmitWorkflowLaunchRequest:
      example:
        launch:
          configText: configText
          stubRun: true
          configProfiles:
          - configProfiles
          - configProfiles
          preRunScript: preRunScript
          userSecrets:
          - userSecrets
          - userSecrets
          schemaName: schemaName
          labelIds:
          - 0
          - 0
          dateCreated: 2000-01-23T04:56:07.000+00:00
          runName: runName
          computeEnvId: computeEnvId
          id: id
          workDir: workDir
          postRunScript: postRunScript
          paramsText: paramsText
          resume: true
          towerConfig: towerConfig
          mainScript: mainScript
          headJobMemoryMb: 1
          pullLatest: true
          headJobCpus: 6
          sessionId: sessionId
          revision: revision
          pipeline: pipeline
          optimizationId: optimizationId
          workspaceSecrets:
          - workspaceSecrets
          - workspaceSecrets
          entryName: entryName
      properties:
        launch:
          $ref: '#/components/schemas/WorkflowLaunchRequest'
      type: object
    SubmitWorkflowLaunchResponse:
      example:
        workflowId: workflowId
      properties:
        workflowId:
          type: string
      type: object
    Task:
      example:
        container: container
        pcpu: 2.027123023002322
        syscw: 4
        attempt: 0
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        executor: executor
        tag: tag
        id: 8
        cloudZone: cloudZone
        realtime: 3
        module:
        - module
        - module
        vmem: 1
        scratch: scratch
        script: script
        exit: exit
        disk: 5
        writeBytes: 9
        workdir: workdir
        name: name
        volCtxt: 9
        rchar: 6
        hash: hash
        memory: 1
        submit: 2000-01-23T04:56:07.000+00:00
        duration: 9
        pmem: 4.145608029883936
        rss: 7
        dateCreated: 2000-01-23T04:56:07.000+00:00
        machineType: machineType
        exitStatus: 7
        process: process
        cost: 2.3021358869347655
        cpus: 6
        start: 2000-01-23T04:56:07.000+00:00
        env: env
        peakRss: 1
        syscr: 1
        peakVmem: 1
        wchar: 7
        readBytes: 5
        time: 5
        errorAction: errorAction
        complete: 2000-01-23T04:56:07.000+00:00
        nativeId: nativeId
        invCtxt: 6
        queue: queue
        taskId: 9
      properties:
        hash:
          type: string
        name:
          type: string
        process:
          type: string
        tag:
          type: string
        submit:
          format: date-time
          type: string
        start:
          format: date-time
          type: string
        complete:
          format: date-time
          type: string
        module:
          items:
            type: string
          type: array
        container:
          type: string
        attempt:
          format: int32
          type: integer
        script:
          type: string
        scratch:
          type: string
        workdir:
          type: string
        queue:
          type: string
        cpus:
          format: int32
          type: integer
        memory:
          format: int64
          type: integer
        disk:
          format: int64
          type: integer
        time:
          format: int64
          type: integer
        env:
          type: string
        executor:
          type: string
        machineType:
          type: string
        cloudZone:
          type: string
        priceModel:
          $ref: '#/components/schemas/CloudPriceModel'
        cost:
          type: number
        errorAction:
          type: string
        exitStatus:
          format: int32
          type: integer
        duration:
          format: int64
          type: integer
        realtime:
          format: int64
          type: integer
        nativeId:
          type: string
        pcpu:
          format: double
          type: number
        pmem:
          format: double
          type: number
        rss:
          format: int64
          type: integer
        vmem:
          format: int64
          type: integer
        peakRss:
          format: int64
          type: integer
        peakVmem:
          format: int64
          type: integer
        rchar:
          format: int64
          type: integer
        wchar:
          format: int64
          type: integer
        syscr:
          format: int64
          type: integer
        syscw:
          format: int64
          type: integer
        readBytes:
          format: int64
          type: integer
        writeBytes:
          format: int64
          type: integer
        volCtxt:
          format: int64
          type: integer
        invCtxt:
          format: int64
          type: integer
        exit:
          type: string
        id:
          format: int64
          nullable: true
          type: integer
        taskId:
          format: int64
          type: integer
        status:
          $ref: '#/components/schemas/TaskStatus'
        dateCreated:
          format: date-time
          nullable: true
          type: string
        lastUpdated:
          format: date-time
          nullable: true
          type: string
      required:
      - status
      - taskId
      type: object
    TaskStatus:
      enum:
      - NEW
      - SUBMITTED
      - RUNNING
      - CACHED
      - COMPLETED
      - FAILED
      - ABORTED
      type: string
    Team:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        dateCreated: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        id: 0
      properties:
        id:
          format: int64
          nullable: true
          readOnly: true
          type: integer
        name:
          maxLength: 40
          pattern: ^[a-zA-Z\d](?:[a-zA-Z\d]|[-_](?=[a-zA-Z\d])){1,38}$
          type: string
        description:
          maxLength: 250
          type: string
        dateCreated:
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
      required:
      - name
      type: object
    TeamDbDto:
      example:
        membersCount: 6
        avatarUrl: avatarUrl
        teamId: 0
        name: name
        description: description
      properties:
        teamId:
          format: int64
          type: integer
        name:
          type: string
        description:
          type: string
        avatarUrl:
          type: string
        membersCount:
          format: int64
          type: integer
      type: object
    TraceBeginRequest:
      example:
        processNames:
        - processNames
        - processNames
        workflow:
          configText: configText
          container: container
          submit: 2000-01-23T04:56:07.000+00:00
          ownerId: 0
          repository: repository
          homeDir: homeDir
          nextflow:
            build: build
            version: version
            timestamp: 2000-01-23T04:56:07.000+00:00
          duration: 1
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          outFile: outFile
          stats:
            ignoredCount: 5
            failedCountFmt: failedCountFmt
            succeedPct: 9.301444
            succeedCount: 5
            cachedCountFmt: cachedCountFmt
            succeedCountFmt: succeedCountFmt
            failedPct: 7.0614014
            ignoredPct: 3.6160767
            succeedDuration: 7
            cachedDuration: 2
            failedCount: 1
            ignoredCountFmt: ignoredCountFmt
            cachedPct: 2.302136
            cachedCount: 6
            computeTimeFmt: computeTimeFmt
            failedDuration: 4
          runName: runName
          launchDir: launchDir
          operationId: operationId
          id: id
          workDir: workDir
          errorReport: errorReport
          exitStatus: 1
          projectDir: projectDir
          resume: true
          manifest:
            mainScript: mainScript
            nextflowVersion: nextflowVersion
            author: author
            defaultBranch: defaultBranch
            name: name
            description: description
            gitmodules: gitmodules
            version: version
            homePage: homePage
          profile: profile
          start: 2000-01-23T04:56:07.000+00:00
          errorMessage: errorMessage
          sessionId: sessionId
          commitId: commitId
          userName: userName
          params:
            key: '{}'
          scriptFile: scriptFile
          revision: revision
          launchId: launchId
          scriptId: scriptId
          configFiles:
          - configFiles
          - configFiles
          deleted: true
          success: true
          logFile: logFile
          scriptName: scriptName
          containerEngine: containerEngine
          complete: 2000-01-23T04:56:07.000+00:00
          commandLine: commandLine
          projectName: projectName
        towerLaunch: true
      properties:
        workflow:
          $ref: '#/components/schemas/Workflow'
        processNames:
          items:
            type: string
          type: array
        towerLaunch:
          type: boolean
      type: object
    TraceBeginResponse:
      example:
        workflowId: workflowId
        watchUrl: watchUrl
      properties:
        status:
          $ref: '#/components/schemas/TraceProcessingStatus'
        workflowId:
          type: string
        watchUrl:
          type: string
      type: object
    TraceCompleteRequest:
      example:
        workflow:
          configText: configText
          container: container
          submit: 2000-01-23T04:56:07.000+00:00
          ownerId: 0
          repository: repository
          homeDir: homeDir
          nextflow:
            build: build
            version: version
            timestamp: 2000-01-23T04:56:07.000+00:00
          duration: 1
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          outFile: outFile
          stats:
            ignoredCount: 5
            failedCountFmt: failedCountFmt
            succeedPct: 9.301444
            succeedCount: 5
            cachedCountFmt: cachedCountFmt
            succeedCountFmt: succeedCountFmt
            failedPct: 7.0614014
            ignoredPct: 3.6160767
            succeedDuration: 7
            cachedDuration: 2
            failedCount: 1
            ignoredCountFmt: ignoredCountFmt
            cachedPct: 2.302136
            cachedCount: 6
            computeTimeFmt: computeTimeFmt
            failedDuration: 4
          runName: runName
          launchDir: launchDir
          operationId: operationId
          id: id
          workDir: workDir
          errorReport: errorReport
          exitStatus: 1
          projectDir: projectDir
          resume: true
          manifest:
            mainScript: mainScript
            nextflowVersion: nextflowVersion
            author: author
            defaultBranch: defaultBranch
            name: name
            description: description
            gitmodules: gitmodules
            version: version
            homePage: homePage
          profile: profile
          start: 2000-01-23T04:56:07.000+00:00
          errorMessage: errorMessage
          sessionId: sessionId
          commitId: commitId
          userName: userName
          params:
            key: '{}'
          scriptFile: scriptFile
          revision: revision
          launchId: launchId
          scriptId: scriptId
          configFiles:
          - configFiles
          - configFiles
          deleted: true
          success: true
          logFile: logFile
          scriptName: scriptName
          containerEngine: containerEngine
          complete: 2000-01-23T04:56:07.000+00:00
          commandLine: commandLine
          projectName: projectName
        progress:
          ignored: 6
          processes:
          - ignored: 6
            aborted: 2
            pending: 8
            index: 6
            peakCpus: 7
            failed: 1
            loadCpus: 6
            running: 6
            retries: 5
            submitted: 9
            peakMemory: 0
            cached: 6
            stored: 6
            loadMemory: 3
            name: name
            peakRunning: 3
            terminated: true
            succeeded: 3
          - ignored: 6
            aborted: 2
            pending: 8
            index: 6
            peakCpus: 7
            failed: 1
            loadCpus: 6
            running: 6
            retries: 5
            submitted: 9
            peakMemory: 0
            cached: 6
            stored: 6
            loadMemory: 3
            name: name
            peakRunning: 3
            terminated: true
            succeeded: 3
          aborted: 1
          pending: 9
          peakCpus: 9
          failed: 1
          loadCpus: 1
          running: 2
          retries: 7
          submitted: 3
          peakMemory: 9
          cached: 7
          stored: 1
          loadMemory: 4
          peakRunning: 5
          succeeded: 4
        metrics:
        - cpuUsage:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          process: process
          mem:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          memUsage:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          timeUsage:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          vmem:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          reads:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          cpu:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          id: 0
          time:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          writes:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
        - cpuUsage:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          process: process
          mem:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          memUsage:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          timeUsage:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          vmem:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          reads:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          cpu:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          id: 0
          time:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
          writes:
            q1: 5.962134
            q2: 5.637377
            q3Label: q3Label
            q3: 2.302136
            minLabel: minLabel
            min: 1.4658129
            max: 7.0614014
            mean: 6.0274563
            warnings:
            - warnings
            - warnings
            q2Label: q2Label
            maxLabel: maxLabel
            q1Label: q1Label
      properties:
        workflow:
          $ref: '#/components/schemas/Workflow'
        metrics:
          items:
            $ref: '#/components/schemas/WorkflowMetrics'
          type: array
        progress:
          $ref: '#/components/schemas/TraceProgressData'
      type: object
    TraceCompleteResponse:
      example:
        workflowId: workflowId
      properties:
        status:
          $ref: '#/components/schemas/TraceProcessingStatus'
        workflowId:
          type: string
      type: object
    TraceCreateRequest:
      example:
        runName: runName
        sessionId: sessionId
        projectName: projectName
        repository: repository
        workflowId: workflowId
      properties:
        sessionId:
          type: string
        runName:
          type: string
        projectName:
          type: string
        repository:
          type: string
        workflowId:
          type: string
      type: object
    TraceCreateResponse:
      example:
        message: message
        workflowId: workflowId
      properties:
        message:
          type: string
        workflowId:
          type: string
      type: object
    TraceHeartbeatRequest:
      example:
        progress:
          ignored: 6
          processes:
          - ignored: 6
            aborted: 2
            pending: 8
            index: 6
            peakCpus: 7
            failed: 1
            loadCpus: 6
            running: 6
            retries: 5
            submitted: 9
            peakMemory: 0
            cached: 6
            stored: 6
            loadMemory: 3
            name: name
            peakRunning: 3
            terminated: true
            succeeded: 3
          - ignored: 6
            aborted: 2
            pending: 8
            index: 6
            peakCpus: 7
            failed: 1
            loadCpus: 6
            running: 6
            retries: 5
            submitted: 9
            peakMemory: 0
            cached: 6
            stored: 6
            loadMemory: 3
            name: name
            peakRunning: 3
            terminated: true
            succeeded: 3
          aborted: 1
          pending: 9
          peakCpus: 9
          failed: 1
          loadCpus: 1
          running: 2
          retries: 7
          submitted: 3
          peakMemory: 9
          cached: 7
          stored: 1
          loadMemory: 4
          peakRunning: 5
          succeeded: 4
      properties:
        progress:
          $ref: '#/components/schemas/TraceProgressData'
      type: object
    TraceHeartbeatResponse:
      example:
        message: message
      properties:
        message:
          type: string
      type: object
    TraceProcessingStatus:
      enum:
      - OK
      - KO
      type: string
    TraceProgressData:
      example:
        ignored: 6
        processes:
        - ignored: 6
          aborted: 2
          pending: 8
          index: 6
          peakCpus: 7
          failed: 1
          loadCpus: 6
          running: 6
          retries: 5
          submitted: 9
          peakMemory: 0
          cached: 6
          stored: 6
          loadMemory: 3
          name: name
          peakRunning: 3
          terminated: true
          succeeded: 3
        - ignored: 6
          aborted: 2
          pending: 8
          index: 6
          peakCpus: 7
          failed: 1
          loadCpus: 6
          running: 6
          retries: 5
          submitted: 9
          peakMemory: 0
          cached: 6
          stored: 6
          loadMemory: 3
          name: name
          peakRunning: 3
          terminated: true
          succeeded: 3
        aborted: 1
        pending: 9
        peakCpus: 9
        failed: 1
        loadCpus: 1
        running: 2
        retries: 7
        submitted: 3
        peakMemory: 9
        cached: 7
        stored: 1
        loadMemory: 4
        peakRunning: 5
        succeeded: 4
      properties:
        pending:
          format: int32
          type: integer
        submitted:
          format: int32
          type: integer
        running:
          format: int32
          type: integer
        succeeded:
          format: int32
          type: integer
        cached:
          format: int32
          type: integer
        failed:
          format: int32
          type: integer
        aborted:
          format: int32
          type: integer
        stored:
          format: int32
          type: integer
        ignored:
          format: int32
          type: integer
        retries:
          format: int32
          type: integer
        loadCpus:
          format: int64
          type: integer
        loadMemory:
          format: int64
          type: integer
        peakRunning:
          format: int32
          type: integer
        peakCpus:
          format: int64
          type: integer
        peakMemory:
          format: int64
          type: integer
        processes:
          items:
            $ref: '#/components/schemas/TraceProgressDetail'
          type: array
      type: object
    TraceProgressDetail:
      example:
        ignored: 6
        aborted: 2
        pending: 8
        index: 6
        peakCpus: 7
        failed: 1
        loadCpus: 6
        running: 6
        retries: 5
        submitted: 9
        peakMemory: 0
        cached: 6
        stored: 6
        loadMemory: 3
        name: name
        peakRunning: 3
        terminated: true
        succeeded: 3
      properties:
        index:
          format: int32
          type: integer
        name:
          type: string
        pending:
          format: int32
          type: integer
        submitted:
          format: int32
          type: integer
        running:
          format: int32
          type: integer
        succeeded:
          format: int32
          type: integer
        cached:
          format: int32
          type: integer
        failed:
          format: int32
          type: integer
        aborted:
          format: int32
          type: integer
        stored:
          format: int32
          type: integer
        ignored:
          format: int32
          type: integer
        retries:
          format: int32
          type: integer
        terminated:
          type: boolean
        loadCpus:
          format: int64
          type: integer
        loadMemory:
          format: int64
          type: integer
        peakRunning:
          format: int32
          type: integer
        peakCpus:
          format: int64
          type: integer
        peakMemory:
          format: int64
          type: integer
      type: object
    TraceProgressRequest:
      example:
        progress:
          ignored: 6
          processes:
          - ignored: 6
            aborted: 2
            pending: 8
            index: 6
            peakCpus: 7
            failed: 1
            loadCpus: 6
            running: 6
            retries: 5
            submitted: 9
            peakMemory: 0
            cached: 6
            stored: 6
            loadMemory: 3
            name: name
            peakRunning: 3
            terminated: true
            succeeded: 3
          - ignored: 6
            aborted: 2
            pending: 8
            index: 6
            peakCpus: 7
            failed: 1
            loadCpus: 6
            running: 6
            retries: 5
            submitted: 9
            peakMemory: 0
            cached: 6
            stored: 6
            loadMemory: 3
            name: name
            peakRunning: 3
            terminated: true
            succeeded: 3
          aborted: 1
          pending: 9
          peakCpus: 9
          failed: 1
          loadCpus: 1
          running: 2
          retries: 7
          submitted: 3
          peakMemory: 9
          cached: 7
          stored: 1
          loadMemory: 4
          peakRunning: 5
          succeeded: 4
        tasks:
        - container: container
          pcpu: 2.027123023002322
          syscw: 4
          attempt: 0
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          executor: executor
          tag: tag
          id: 8
          cloudZone: cloudZone
          realtime: 3
          module:
          - module
          - module
          vmem: 1
          scratch: scratch
          script: script
          exit: exit
          disk: 5
          writeBytes: 9
          workdir: workdir
          name: name
          volCtxt: 9
          rchar: 6
          hash: hash
          memory: 1
          submit: 2000-01-23T04:56:07.000+00:00
          duration: 9
          pmem: 4.145608029883936
          rss: 7
          dateCreated: 2000-01-23T04:56:07.000+00:00
          machineType: machineType
          exitStatus: 7
          process: process
          cost: 2.3021358869347655
          cpus: 6
          start: 2000-01-23T04:56:07.000+00:00
          env: env
          peakRss: 1
          syscr: 1
          peakVmem: 1
          wchar: 7
          readBytes: 5
          time: 5
          errorAction: errorAction
          complete: 2000-01-23T04:56:07.000+00:00
          nativeId: nativeId
          invCtxt: 6
          queue: queue
          taskId: 9
        - container: container
          pcpu: 2.027123023002322
          syscw: 4
          attempt: 0
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          executor: executor
          tag: tag
          id: 8
          cloudZone: cloudZone
          realtime: 3
          module:
          - module
          - module
          vmem: 1
          scratch: scratch
          script: script
          exit: exit
          disk: 5
          writeBytes: 9
          workdir: workdir
          name: name
          volCtxt: 9
          rchar: 6
          hash: hash
          memory: 1
          submit: 2000-01-23T04:56:07.000+00:00
          duration: 9
          pmem: 4.145608029883936
          rss: 7
          dateCreated: 2000-01-23T04:56:07.000+00:00
          machineType: machineType
          exitStatus: 7
          process: process
          cost: 2.3021358869347655
          cpus: 6
          start: 2000-01-23T04:56:07.000+00:00
          env: env
          peakRss: 1
          syscr: 1
          peakVmem: 1
          wchar: 7
          readBytes: 5
          time: 5
          errorAction: errorAction
          complete: 2000-01-23T04:56:07.000+00:00
          nativeId: nativeId
          invCtxt: 6
          queue: queue
          taskId: 9
      properties:
        tasks:
          items:
            $ref: '#/components/schemas/Task'
          type: array
        progress:
          $ref: '#/components/schemas/TraceProgressData'
      type: object
    TraceProgressResponse:
      example:
        workflowId: workflowId
      properties:
        status:
          $ref: '#/components/schemas/TraceProcessingStatus'
        workflowId:
          type: string
      type: object
    UnivaComputeConfig:
      allOf:
      - $ref: '#/components/schemas/AbstractGridConfig'
      - $ref: '#/components/schemas/AltairPbsComputeConfig_allOf'
      title: Univa Grid Engine configuration
    UpdateActionRequest:
      example:
        launch:
          configText: configText
          stubRun: true
          configProfiles:
          - configProfiles
          - configProfiles
          preRunScript: preRunScript
          userSecrets:
          - userSecrets
          - userSecrets
          schemaName: schemaName
          labelIds:
          - 0
          - 0
          dateCreated: 2000-01-23T04:56:07.000+00:00
          runName: runName
          computeEnvId: computeEnvId
          id: id
          workDir: workDir
          postRunScript: postRunScript
          paramsText: paramsText
          resume: true
          towerConfig: towerConfig
          mainScript: mainScript
          headJobMemoryMb: 1
          pullLatest: true
          headJobCpus: 6
          sessionId: sessionId
          revision: revision
          pipeline: pipeline
          optimizationId: optimizationId
          workspaceSecrets:
          - workspaceSecrets
          - workspaceSecrets
          entryName: entryName
      properties:
        launch:
          $ref: '#/components/schemas/WorkflowLaunchRequest'
      type: object
    UpdateCredentialsRequest:
      example:
        credentials:
          lastUsed: 2000-01-23T04:56:07.000+00:00
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          baseUrl: baseUrl
          deleted: true
          dateCreated: 2000-01-23T04:56:07.000+00:00
          provider: aws
          name: name
          description: description
          id: id
          category: category
      properties:
        credentials:
          $ref: '#/components/schemas/CredentialsSpec'
      type: object
    UpdateDatasetRequest:
      example:
        name: name
        description: description
      properties:
        name:
          type: string
        description:
          type: string
      type: object
    UpdateLabelRequest:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    UpdateMemberRoleRequest:
      example: {}
      properties:
        role:
          $ref: '#/components/schemas/OrgRole'
      type: object
    UpdateOrganizationRequest:
      example:
        website: website
        description: description
        fullName: fullName
        location: location
        logoId: logoId
      properties:
        description:
          type: string
        fullName:
          type: string
        website:
          type: string
        logoId:
          type: string
        location:
          type: string
      type: object
    UpdateParticipantRoleRequest:
      example: {}
      properties:
        role:
          $ref: '#/components/schemas/WspRole'
      type: object
    UpdatePipelineRequest:
      example:
        labelIds:
        - 0
        - 0
        icon: icon
        description: description
        launch:
          configText: configText
          stubRun: true
          configProfiles:
          - configProfiles
          - configProfiles
          preRunScript: preRunScript
          userSecrets:
          - userSecrets
          - userSecrets
          schemaName: schemaName
          labelIds:
          - 0
          - 0
          dateCreated: 2000-01-23T04:56:07.000+00:00
          runName: runName
          computeEnvId: computeEnvId
          id: id
          workDir: workDir
          postRunScript: postRunScript
          paramsText: paramsText
          resume: true
          towerConfig: towerConfig
          mainScript: mainScript
          headJobMemoryMb: 1
          pullLatest: true
          headJobCpus: 6
          sessionId: sessionId
          revision: revision
          pipeline: pipeline
          optimizationId: optimizationId
          workspaceSecrets:
          - workspaceSecrets
          - workspaceSecrets
          entryName: entryName
      properties:
        description:
          type: string
        icon:
          type: string
        launch:
          $ref: '#/components/schemas/WorkflowLaunchRequest'
        labelIds:
          items:
            format: int64
            type: integer
          type: array
      type: object
    UpdatePipelineResponse:
      example:
        pipeline:
          orgName: orgName
          visibility: visibility
          optimized: true
          icon: icon
          description: description
          userFirstName: userFirstName
          repository: repository
          userName: userName
          userId: 6
          orgId: 1
          pipelineId: 0
          labels:
          - resource: true
            name: name
            id: 0
            value: value
          - resource: true
            name: name
            id: 0
            value: value
          userLastName: userLastName
          name: name
          workspaceName: workspaceName
          workspaceId: 5
      properties:
        pipeline:
          $ref: '#/components/schemas/PipelineDbDto'
      type: object
    UpdatePipelineSecretRequest:
      example:
        value: value
      properties:
        value:
          type: string
      type: object
    UpdateWorkspaceRequest:
      example:
        description: description
        fullName: fullName
      properties:
        visibility:
          $ref: '#/components/schemas/Visibility'
        description:
          type: string
        fullName:
          type: string
      required:
      - description
      - fullName
      type: object
    UploadDatasetVersionResponse:
      example:
        version:
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          datasetDescription: datasetDescription
          hasHeader: true
          fileName: fileName
          datasetName: datasetName
          datasetId: datasetId
          mediaType: mediaType
          version: 0
          url: url
      properties:
        version:
          $ref: '#/components/schemas/DatasetVersionDbDto'
      type: object
    User:
      example:
        lastName: lastName
        description: description
        lastAccess: 2000-01-23T04:56:07.000+00:00
        avatar: avatar
        userName: userName
        termsOfUseConsent: true
        firstName: firstName
        notification: true
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        dateCreated: 2000-01-23T04:56:07.000+00:00
        deleted: true
        organization: organization
        marketingConsent: true
        id: 0
        email: email
      properties:
        id:
          format: int64
          nullable: true
          readOnly: true
          type: integer
        userName:
          maxLength: 40
          pattern: ^[a-z\d](?:[a-z\d]|-(?=[a-z\d])){1,38}$
          type: string
        email:
          format: email
          maxLength: 255
          readOnly: true
          type: string
        firstName:
          maxLength: 100
          type: string
        lastName:
          maxLength: 100
          type: string
        organization:
          maxLength: 100
          type: string
        description:
          maxLength: 1000
          type: string
        avatar:
          type: string
        notification:
          type: boolean
        termsOfUseConsent:
          readOnly: true
          type: boolean
        marketingConsent:
          readOnly: true
          type: boolean
        lastAccess:
          format: date-time
          readOnly: true
          type: string
        dateCreated:
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        deleted:
          readOnly: true
          type: boolean
      required:
      - userName
      type: object
    Visibility:
      enum:
      - PRIVATE
      - SHARED
      - PUBLIC
      type: string
    WfManifest:
      example:
        mainScript: mainScript
        nextflowVersion: nextflowVersion
        author: author
        defaultBranch: defaultBranch
        name: name
        description: description
        gitmodules: gitmodules
        version: version
        homePage: homePage
      properties:
        nextflowVersion:
          maxLength: 20
          type: string
        defaultBranch:
          maxLength: 20
          type: string
        version:
          maxLength: 20
          type: string
        homePage:
          maxLength: 200
          type: string
        gitmodules:
          maxLength: 150
          type: string
        description:
          maxLength: 1024
          type: string
        name:
          maxLength: 150
          type: string
        mainScript:
          maxLength: 100
          type: string
        author:
          maxLength: 150
          type: string
      type: object
    WfNextflow:
      example:
        build: build
        version: version
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        version:
          maxLength: 20
          type: string
        build:
          maxLength: 10
          type: string
        timestamp:
          format: date-time
          type: string
      type: object
    WfStats:
      example:
        ignoredCount: 5
        failedCountFmt: failedCountFmt
        succeedPct: 9.301444
        succeedCount: 5
        cachedCountFmt: cachedCountFmt
        succeedCountFmt: succeedCountFmt
        failedPct: 7.0614014
        ignoredPct: 3.6160767
        succeedDuration: 7
        cachedDuration: 2
        failedCount: 1
        ignoredCountFmt: ignoredCountFmt
        cachedPct: 2.302136
        cachedCount: 6
        computeTimeFmt: computeTimeFmt
        failedDuration: 4
      properties:
        computeTimeFmt:
          maxLength: 50
          type: string
        cachedCount:
          format: int32
          type: integer
        failedCount:
          format: int32
          type: integer
        ignoredCount:
          format: int32
          type: integer
        succeedCount:
          format: int32
          type: integer
        cachedCountFmt:
          type: string
        succeedCountFmt:
          type: string
        failedCountFmt:
          type: string
        ignoredCountFmt:
          type: string
        cachedPct:
          format: float
          type: number
        failedPct:
          format: float
          type: number
        succeedPct:
          format: float
          type: number
        ignoredPct:
          format: float
          type: number
        cachedDuration:
          format: int64
          type: integer
        failedDuration:
          format: int64
          type: integer
        succeedDuration:
          format: int64
          type: integer
      type: object
    Workflow:
      example:
        configText: configText
        container: container
        submit: 2000-01-23T04:56:07.000+00:00
        ownerId: 0
        repository: repository
        homeDir: homeDir
        nextflow:
          build: build
          version: version
          timestamp: 2000-01-23T04:56:07.000+00:00
        duration: 1
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        dateCreated: 2000-01-23T04:56:07.000+00:00
        outFile: outFile
        stats:
          ignoredCount: 5
          failedCountFmt: failedCountFmt
          succeedPct: 9.301444
          succeedCount: 5
          cachedCountFmt: cachedCountFmt
          succeedCountFmt: succeedCountFmt
          failedPct: 7.0614014
          ignoredPct: 3.6160767
          succeedDuration: 7
          cachedDuration: 2
          failedCount: 1
          ignoredCountFmt: ignoredCountFmt
          cachedPct: 2.302136
          cachedCount: 6
          computeTimeFmt: computeTimeFmt
          failedDuration: 4
        runName: runName
        launchDir: launchDir
        operationId: operationId
        id: id
        workDir: workDir
        errorReport: errorReport
        exitStatus: 1
        projectDir: projectDir
        resume: true
        manifest:
          mainScript: mainScript
          nextflowVersion: nextflowVersion
          author: author
          defaultBranch: defaultBranch
          name: name
          description: description
          gitmodules: gitmodules
          version: version
          homePage: homePage
        profile: profile
        start: 2000-01-23T04:56:07.000+00:00
        errorMessage: errorMessage
        sessionId: sessionId
        commitId: commitId
        userName: userName
        params:
          key: '{}'
        scriptFile: scriptFile
        revision: revision
        launchId: launchId
        scriptId: scriptId
        configFiles:
        - configFiles
        - configFiles
        deleted: true
        success: true
        logFile: logFile
        scriptName: scriptName
        containerEngine: containerEngine
        complete: 2000-01-23T04:56:07.000+00:00
        commandLine: commandLine
        projectName: projectName
      properties:
        status:
          $ref: '#/components/schemas/WorkflowStatus'
        ownerId:
          format: int64
          readOnly: true
          type: integer
        repository:
          type: string
        id:
          maxLength: 16
          type: string
        submit:
          format: date-time
          type: string
        start:
          format: date-time
          type: string
        complete:
          format: date-time
          type: string
        dateCreated:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        runName:
          maxLength: 80
          type: string
        sessionId:
          maxLength: 36
          type: string
        profile:
          maxLength: 100
          type: string
        workDir:
          type: string
        commitId:
          maxLength: 40
          type: string
        userName:
          maxLength: 40
          type: string
        scriptId:
          maxLength: 40
          type: string
        revision:
          maxLength: 100
          type: string
        commandLine:
          maxLength: 8096
          type: string
        projectName:
          maxLength: 100
          type: string
        scriptName:
          maxLength: 100
          type: string
        launchId:
          maxLength: 22
          type: string
        configFiles:
          items:
            type: string
          type: array
        params:
          additionalProperties: true
          type: object
        configText:
          type: string
        manifest:
          $ref: '#/components/schemas/WfManifest'
        nextflow:
          $ref: '#/components/schemas/WfNextflow'
        stats:
          $ref: '#/components/schemas/WfStats'
        errorMessage:
          type: string
        errorReport:
          type: string
        deleted:
          readOnly: true
          type: boolean
        projectDir:
          type: string
        homeDir:
          type: string
        container:
          type: string
        containerEngine:
          type: string
        scriptFile:
          type: string
        launchDir:
          type: string
        duration:
          format: int64
          type: integer
        exitStatus:
          format: int32
          type: integer
        resume:
          type: boolean
        success:
          type: boolean
        logFile:
          maxLength: 255
          type: string
        outFile:
          maxLength: 255
          type: string
        operationId:
          maxLength: 110
          type: string
      required:
      - commandLine
      - projectName
      - runName
      - sessionId
      - submit
      - userName
      - workDir
      type: object
    WorkflowDbDto:
      example:
        configText: configText
        container: container
        submit: 2000-01-23T04:56:07.000+00:00
        ownerId: 0
        repository: repository
        homeDir: homeDir
        nextflow:
          build: build
          version: version
          timestamp: 2000-01-23T04:56:07.000+00:00
        duration: 6
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        dateCreated: 2000-01-23T04:56:07.000+00:00
        stats:
          ignoredCount: 5
          failedCountFmt: failedCountFmt
          succeedPct: 9.301444
          succeedCount: 5
          cachedCountFmt: cachedCountFmt
          succeedCountFmt: succeedCountFmt
          failedPct: 7.0614014
          ignoredPct: 3.6160767
          succeedDuration: 7
          cachedDuration: 2
          failedCount: 1
          ignoredCountFmt: ignoredCountFmt
          cachedPct: 2.302136
          cachedCount: 6
          computeTimeFmt: computeTimeFmt
          failedDuration: 4
        runName: runName
        launchDir: launchDir
        id: id
        workDir: workDir
        errorReport: errorReport
        exitStatus: 1
        projectDir: projectDir
        resume: true
        manifest:
          mainScript: mainScript
          nextflowVersion: nextflowVersion
          author: author
          defaultBranch: defaultBranch
          name: name
          description: description
          gitmodules: gitmodules
          version: version
          homePage: homePage
        profile: profile
        start: 2000-01-23T04:56:07.000+00:00
        errorMessage: errorMessage
        sessionId: sessionId
        commitId: commitId
        params:
          key: true
        userName: userName
        scriptFile: scriptFile
        revision: revision
        launchId: launchId
        scriptId: scriptId
        configFiles:
        - configFiles
        - configFiles
        deleted: true
        success: true
        scriptName: scriptName
        containerEngine: containerEngine
        commandLine: commandLine
        complete: 2000-01-23T04:56:07.000+00:00
        projectName: projectName
      properties:
        commandLine:
          type: string
        params:
          additionalProperties:
            type: boolean
          type: object
        projectDir:
          type: string
        profile:
          type: string
        start:
          format: date-time
          type: string
        ownerId:
          format: int64
          type: integer
        repository:
          type: string
        id:
          type: string
        submit:
          format: date-time
          type: string
        complete:
          format: date-time
          type: string
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
        runName:
          type: string
        sessionId:
          type: string
        workDir:
          type: string
        commitId:
          type: string
        userName:
          type: string
        scriptId:
          type: string
        revision:
          type: string
        projectName:
          type: string
        scriptName:
          type: string
        launchId:
          type: string
        status:
          $ref: '#/components/schemas/WorkflowStatus'
        configFiles:
          items:
            type: string
          type: array
        configText:
          type: string
        resume:
          type: boolean
        manifest:
          $ref: '#/components/schemas/WfManifest'
        nextflow:
          $ref: '#/components/schemas/WfNextflow'
        stats:
          $ref: '#/components/schemas/WfStats'
        errorMessage:
          type: string
        errorReport:
          type: string
        deleted:
          type: boolean
        homeDir:
          type: string
        container:
          type: string
        containerEngine:
          type: string
        scriptFile:
          type: string
        launchDir:
          type: string
        duration:
          format: int64
          type: integer
        exitStatus:
          format: int32
          type: integer
        success:
          type: boolean
      type: object
    WorkflowLaunchRequest:
      example:
        configText: configText
        stubRun: true
        configProfiles:
        - configProfiles
        - configProfiles
        preRunScript: preRunScript
        userSecrets:
        - userSecrets
        - userSecrets
        schemaName: schemaName
        labelIds:
        - 0
        - 0
        dateCreated: 2000-01-23T04:56:07.000+00:00
        runName: runName
        computeEnvId: computeEnvId
        id: id
        workDir: workDir
        postRunScript: postRunScript
        paramsText: paramsText
        resume: true
        towerConfig: towerConfig
        mainScript: mainScript
        headJobMemoryMb: 1
        pullLatest: true
        headJobCpus: 6
        sessionId: sessionId
        revision: revision
        pipeline: pipeline
        optimizationId: optimizationId
        workspaceSecrets:
        - workspaceSecrets
        - workspaceSecrets
        entryName: entryName
      properties:
        id:
          type: string
        computeEnvId:
          type: string
        runName:
          type: string
        pipeline:
          type: string
        workDir:
          type: string
        revision:
          type: string
        sessionId:
          type: string
        configProfiles:
          items:
            type: string
          type: array
        userSecrets:
          items:
            type: string
          type: array
        workspaceSecrets:
          items:
            type: string
          type: array
        configText:
          type: string
        towerConfig:
          type: string
        paramsText:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        mainScript:
          type: string
        entryName:
          type: string
        schemaName:
          type: string
        resume:
          type: boolean
        pullLatest:
          type: boolean
        stubRun:
          type: boolean
        optimizationId:
          type: string
        labelIds:
          items:
            format: int64
            type: integer
          type: array
        headJobCpus:
          format: int32
          type: integer
        headJobMemoryMb:
          format: int32
          type: integer
        dateCreated:
          format: date-time
          type: string
      type: object
    WorkflowLaunchResponse:
      example:
        configText: configText
        resume: true
        stubRun: true
        towerConfig: towerConfig
        configProfiles:
        - configProfiles
        - configProfiles
        mainScript: mainScript
        preRunScript: preRunScript
        userSecrets:
        - userSecrets
        - userSecrets
        pullLatest: true
        sessionId: sessionId
        schemaName: schemaName
        revision: revision
        pipeline: pipeline
        workspaceSecrets:
        - workspaceSecrets
        - workspaceSecrets
        resumeDir: resumeDir
        computeEnv:
          description: description
          credentialsId: credentialsId
          message: message
          platform: aws-batch
          orgId: 0
          lastUsed: 2000-01-23T04:56:07.000+00:00
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          deleted: true
          name: name
          id: id
          primary: true
          workspaceId: 6
        dateCreated: 2000-01-23T04:56:07.000+00:00
        entryName: entryName
        id: id
        workDir: workDir
        postRunScript: postRunScript
        paramsText: paramsText
        resumeCommitId: resumeCommitId
      properties:
        id:
          type: string
        computeEnv:
          $ref: '#/components/schemas/ComputeEnv'
        pipeline:
          type: string
        workDir:
          type: string
        revision:
          type: string
        sessionId:
          type: string
        configProfiles:
          items:
            type: string
          type: array
        userSecrets:
          items:
            type: string
          type: array
        workspaceSecrets:
          items:
            type: string
          type: array
        configText:
          type: string
        towerConfig:
          type: string
        paramsText:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        mainScript:
          type: string
        entryName:
          type: string
        schemaName:
          type: string
        resume:
          type: boolean
        pullLatest:
          type: boolean
        stubRun:
          type: boolean
        resumeDir:
          type: string
        resumeCommitId:
          type: string
        dateCreated:
          format: date-time
          type: string
      type: object
    WorkflowLoad:
      example:
        pending: 5
        peakTasks: 6
        running: 2
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        cpuLoad: 1
        dateCreated: 2000-01-23T04:56:07.000+00:00
        cpuTime: 1
        peakMemory: 3
        cached: 3
        loadMemory: 8
        cost: 9.965781217890562
        cpus: 7
        loadTasks: 9
        peakCpus: 9
        failed: 9
        loadCpus: 6
        volCtxSwitch: 4
        submitted: 5
        writeBytes: 1
        invCtxSwitch: 5
        memoryReq: 6
        memoryEfficiency: 2.027123
        cpuEfficiency: 4.145608
        memoryRss: 1
        readBytes: 7
        executors:
        - executors
        - executors
        succeeded: 7
      properties:
        pending:
          format: int64
          type: integer
        submitted:
          format: int64
          type: integer
        running:
          format: int64
          type: integer
        succeeded:
          format: int64
          type: integer
        failed:
          format: int64
          type: integer
        cached:
          format: int64
          type: integer
        memoryEfficiency:
          format: float
          type: number
        cpuEfficiency:
          format: float
          type: number
        cpus:
          format: int64
          type: integer
        cpuTime:
          format: int64
          type: integer
        cpuLoad:
          format: int64
          type: integer
        memoryRss:
          format: int64
          type: integer
        memoryReq:
          format: int64
          type: integer
        readBytes:
          format: int64
          type: integer
        writeBytes:
          format: int64
          type: integer
        volCtxSwitch:
          format: int64
          type: integer
        invCtxSwitch:
          format: int64
          type: integer
        cost:
          type: number
        loadTasks:
          format: int64
          type: integer
        loadCpus:
          format: int64
          type: integer
        loadMemory:
          format: int64
          type: integer
        peakCpus:
          format: int64
          type: integer
        peakTasks:
          format: int64
          type: integer
        peakMemory:
          format: int64
          type: integer
        executors:
          items:
            type: string
          type: array
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
      required:
      - cached
      - cpuLoad
      - cpuTime
      - cpus
      - failed
      - invCtxSwitch
      - loadCpus
      - loadMemory
      - loadTasks
      - memoryReq
      - memoryRss
      - peakCpus
      - peakMemory
      - peakTasks
      - pending
      - readBytes
      - running
      - submitted
      - succeeded
      - volCtxSwitch
      - writeBytes
      type: object
    WorkflowLogResponse:
      example:
        log:
          entries: '{}'
          forwardToken: forwardToken
          downloads:
          - displayText: displayText
            fileName: fileName
            saveName: saveName
          - displayText: displayText
            fileName: fileName
            saveName: saveName
          pending: true
          truncated: true
          rewindToken: rewindToken
          message: message
      properties:
        log:
          $ref: '#/components/schemas/LogPage'
      type: object
    WorkflowMetrics:
      example:
        cpuUsage:
          q1: 5.962134
          q2: 5.637377
          q3Label: q3Label
          q3: 2.302136
          minLabel: minLabel
          min: 1.4658129
          max: 7.0614014
          mean: 6.0274563
          warnings:
          - warnings
          - warnings
          q2Label: q2Label
          maxLabel: maxLabel
          q1Label: q1Label
        process: process
        mem:
          q1: 5.962134
          q2: 5.637377
          q3Label: q3Label
          q3: 2.302136
          minLabel: minLabel
          min: 1.4658129
          max: 7.0614014
          mean: 6.0274563
          warnings:
          - warnings
          - warnings
          q2Label: q2Label
          maxLabel: maxLabel
          q1Label: q1Label
        memUsage:
          q1: 5.962134
          q2: 5.637377
          q3Label: q3Label
          q3: 2.302136
          minLabel: minLabel
          min: 1.4658129
          max: 7.0614014
          mean: 6.0274563
          warnings:
          - warnings
          - warnings
          q2Label: q2Label
          maxLabel: maxLabel
          q1Label: q1Label
        timeUsage:
          q1: 5.962134
          q2: 5.637377
          q3Label: q3Label
          q3: 2.302136
          minLabel: minLabel
          min: 1.4658129
          max: 7.0614014
          mean: 6.0274563
          warnings:
          - warnings
          - warnings
          q2Label: q2Label
          maxLabel: maxLabel
          q1Label: q1Label
        vmem:
          q1: 5.962134
          q2: 5.637377
          q3Label: q3Label
          q3: 2.302136
          minLabel: minLabel
          min: 1.4658129
          max: 7.0614014
          mean: 6.0274563
          warnings:
          - warnings
          - warnings
          q2Label: q2Label
          maxLabel: maxLabel
          q1Label: q1Label
        reads:
          q1: 5.962134
          q2: 5.637377
          q3Label: q3Label
          q3: 2.302136
          minLabel: minLabel
          min: 1.4658129
          max: 7.0614014
          mean: 6.0274563
          warnings:
          - warnings
          - warnings
          q2Label: q2Label
          maxLabel: maxLabel
          q1Label: q1Label
        cpu:
          q1: 5.962134
          q2: 5.637377
          q3Label: q3Label
          q3: 2.302136
          minLabel: minLabel
          min: 1.4658129
          max: 7.0614014
          mean: 6.0274563
          warnings:
          - warnings
          - warnings
          q2Label: q2Label
          maxLabel: maxLabel
          q1Label: q1Label
        id: 0
        time:
          q1: 5.962134
          q2: 5.637377
          q3Label: q3Label
          q3: 2.302136
          minLabel: minLabel
          min: 1.4658129
          max: 7.0614014
          mean: 6.0274563
          warnings:
          - warnings
          - warnings
          q2Label: q2Label
          maxLabel: maxLabel
          q1Label: q1Label
        writes:
          q1: 5.962134
          q2: 5.637377
          q3Label: q3Label
          q3: 2.302136
          minLabel: minLabel
          min: 1.4658129
          max: 7.0614014
          mean: 6.0274563
          warnings:
          - warnings
          - warnings
          q2Label: q2Label
          maxLabel: maxLabel
          q1Label: q1Label
      properties:
        id:
          format: int64
          nullable: true
          type: integer
        process:
          maxLength: 255
          type: string
        cpu:
          $ref: '#/components/schemas/ResourceData'
        mem:
          $ref: '#/components/schemas/ResourceData'
        vmem:
          $ref: '#/components/schemas/ResourceData'
        time:
          $ref: '#/components/schemas/ResourceData'
        reads:
          $ref: '#/components/schemas/ResourceData'
        writes:
          $ref: '#/components/schemas/ResourceData'
        cpuUsage:
          $ref: '#/components/schemas/ResourceData'
        memUsage:
          $ref: '#/components/schemas/ResourceData'
        timeUsage:
          $ref: '#/components/schemas/ResourceData'
      required:
      - process
      type: object
    WorkflowQueryAttribute:
      enum:
      - optimized
      - labels
      type: string
    WorkflowStatus:
      enum:
      - SUBMITTED
      - RUNNING
      - SUCCEEDED
      - FAILED
      - CANCELLED
      - UNKNOWN
      type: string
    Workspace:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        dateCreated: 2000-01-23T04:56:07.000+00:00
        name: name
        fullName: fullName
        description: description
        id: 0
      properties:
        id:
          format: int64
          nullable: true
          type: integer
        name:
          maxLength: 40
          pattern: ^[a-zA-Z\d](?:[a-zA-Z\d]|[-_](?=[a-zA-Z\d])){1,38}$
          type: string
        fullName:
          maxLength: 100
          type: string
        description:
          maxLength: 1000
          type: string
        visibility:
          $ref: '#/components/schemas/Visibility'
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
      required:
      - fullName
      - name
      - visibility
      type: object
    WorkspaceDbDto:
      example:
        name: name
        fullName: fullName
        description: description
        id: 0
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        fullName:
          type: string
        description:
          type: string
        visibility:
          $ref: '#/components/schemas/Visibility'
      type: object
    WspRole:
      enum:
      - owner
      - admin
      - maintain
      - launch
      - view
      type: string
    inline_object:
      properties:
        image:
          format: binary
          type: string
      type: object
    AltairPbsComputeConfig_allOf:
      properties:
        environment:
          items:
            $ref: '#/components/schemas/ConfigEnvVariable'
          type: array
        discriminator:
          description: property to select the compute config platform
          readOnly: true
          type: string
    EksComputeConfig_allOf:
      properties:
        region:
          description: AWS region
          type: string
        clusterName:
          description: The AWS EKS cluster name
          type: string
        environment:
          items:
            $ref: '#/components/schemas/ConfigEnvVariable'
          type: array
        workDir:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        server:
          type: string
        sslCert:
          type: string
        namespace:
          type: string
        computeServiceAccount:
          type: string
        headServiceAccount:
          type: string
        storageClaimName:
          type: string
        storageMountPath:
          type: string
        podCleanup:
          $ref: '#/components/schemas/PodCleanupPolicy'
        headPodSpec:
          type: string
        servicePodSpec:
          type: string
        headJobCpus:
          format: int32
          type: integer
        headJobMemoryMb:
          format: int32
          type: integer
        discriminator:
          description: property to select the compute config platform
          readOnly: true
          type: string
    GkeComputeConfig_allOf:
      properties:
        region:
          description: The GKE cluster region - or - zone
          type: string
        clusterName:
          description: The GKE cluster name
          type: string
        environment:
          items:
            $ref: '#/components/schemas/ConfigEnvVariable'
          type: array
        workDir:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        server:
          type: string
        sslCert:
          type: string
        namespace:
          type: string
        computeServiceAccount:
          type: string
        headServiceAccount:
          type: string
        storageClaimName:
          type: string
        storageMountPath:
          type: string
        podCleanup:
          $ref: '#/components/schemas/PodCleanupPolicy'
        headPodSpec:
          type: string
        servicePodSpec:
          type: string
        headJobCpus:
          format: int32
          type: integer
        headJobMemoryMb:
          format: int32
          type: integer
        discriminator:
          description: property to select the compute config platform
          readOnly: true
          type: string
    LsfComputeConfig_allOf:
      properties:
        unitForLimits:
          type: string
        perJobMemLimit:
          type: boolean
        perTaskReserve:
          type: boolean
        environment:
          items:
            $ref: '#/components/schemas/ConfigEnvVariable'
          type: array
        discriminator:
          description: property to select the compute config platform
          readOnly: true
          type: string
  securitySchemes:
    BearerAuth:
      bearerFormat: jwt
      scheme: bearer
      type: http
